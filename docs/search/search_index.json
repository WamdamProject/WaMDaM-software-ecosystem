{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the WaMDaM documentations\n\n\nOverview\n\n\nWaMDaM is both an information model and a couple of supporting software ecosystem. WaMDaM tools are designed to organize, identify, and compare multiple systems water management data in a single database. \n\n\nThink of WaMDaM as a repository of water management data (blue cylinder) and a translator between numerous data sources on the left and different models on the right.   \n\n\nWaMDaM translates two aspects of the data: the \nsyntax\n (i.e., structure) and \nsemantics\n (terminology). WaMDaM intends to speed the time to find, organize, and synthesize data from different data sources, and prepare data for modeling.\n\n\n\nWorkflow of using WaMDaM\n\n\nThese are the high level steps to use WaMDaM\n\n\n\nGetting Started\n\n\nThe \nGetting Started\n section guides you how to set up a WaMDaM Wizard and load your data into a SQLite database. \n\n\nApplication and use cases\n\n\nCheck out the \nuse cases\n that demonstrate how WaMDaM enables systematic data query and comparisons across multiple different models and datasets \n\n\nInformation Model\n\n\n\n\nView primary \ndocumentation\n for the WaMDaM Information Model* \n\n\n\n\nCross-platform implementations\n\n\nSupport for multiple RDBMS: MS SQL Server, MySQL, PostgreSQL, and SQLite\n\n\nWaMDaM Controlled vocabulary\n\n\nA Python/Django-based web application for managing the WaMDaM controlled vocabularies\n* Online submittal and moderation of new terms and changes to existing terms\n* Views of all existing vocabularies and terms\n* Application deployed at \nvocabulary.wamdam.org\n\n* \nhttps://github.com/WamdamProject/WaMDaM_ControlledVocabularies\n\n\nWaMDaM Wizard\n\n\nA Python-based Graphical User Interface to validate and load water management data mainly from an Excel Template into a SQLite WaMDaM compliant database.\n\n* \nWaMDaM Wizard\n \nBy using the Wizard, users are not expected to understand the underlying WaMDaM database of schema. Users just need to understand how to fit their data into these concepts: ObjectType, Attribute, Instance, Network, and Scenario. \n\n\n\n\nFeedback\n\n\nDo you have feedback on WaMDaM? \nThe Team\n would love to hear from you.\n\nLet us know what interest you in WaMDaM in this \nQuick survey", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-the-wamdam-documentations", 
            "text": "", 
            "title": "Welcome to the WaMDaM documentations"
        }, 
        {
            "location": "/#overview", 
            "text": "WaMDaM is both an information model and a couple of supporting software ecosystem. WaMDaM tools are designed to organize, identify, and compare multiple systems water management data in a single database.   Think of WaMDaM as a repository of water management data (blue cylinder) and a translator between numerous data sources on the left and different models on the right.     WaMDaM translates two aspects of the data: the  syntax  (i.e., structure) and  semantics  (terminology). WaMDaM intends to speed the time to find, organize, and synthesize data from different data sources, and prepare data for modeling.", 
            "title": "Overview"
        }, 
        {
            "location": "/#workflow-of-using-wamdam", 
            "text": "These are the high level steps to use WaMDaM", 
            "title": "Workflow of using WaMDaM"
        }, 
        {
            "location": "/#getting-started", 
            "text": "The  Getting Started  section guides you how to set up a WaMDaM Wizard and load your data into a SQLite database.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/#application-and-use-cases", 
            "text": "Check out the  use cases  that demonstrate how WaMDaM enables systematic data query and comparisons across multiple different models and datasets", 
            "title": "Application and use cases"
        }, 
        {
            "location": "/#information-model", 
            "text": "View primary  documentation  for the WaMDaM Information Model*", 
            "title": "Information Model"
        }, 
        {
            "location": "/#cross-platform-implementations", 
            "text": "Support for multiple RDBMS: MS SQL Server, MySQL, PostgreSQL, and SQLite", 
            "title": "Cross-platform implementations"
        }, 
        {
            "location": "/#wamdam-controlled-vocabulary", 
            "text": "A Python/Django-based web application for managing the WaMDaM controlled vocabularies\n* Online submittal and moderation of new terms and changes to existing terms\n* Views of all existing vocabularies and terms\n* Application deployed at  vocabulary.wamdam.org \n*  https://github.com/WamdamProject/WaMDaM_ControlledVocabularies", 
            "title": "WaMDaM Controlled vocabulary"
        }, 
        {
            "location": "/#wamdam-wizard", 
            "text": "A Python-based Graphical User Interface to validate and load water management data mainly from an Excel Template into a SQLite WaMDaM compliant database. \n*  WaMDaM Wizard  \nBy using the Wizard, users are not expected to understand the underlying WaMDaM database of schema. Users just need to understand how to fit their data into these concepts: ObjectType, Attribute, Instance, Network, and Scenario.", 
            "title": "WaMDaM Wizard"
        }, 
        {
            "location": "/#feedback", 
            "text": "Do you have feedback on WaMDaM?  The Team  would love to hear from you. \nLet us know what interest you in WaMDaM in this  Quick survey", 
            "title": "Feedback"
        }, 
        {
            "location": "/Why_WaMDaM/", 
            "text": "Why WaMDaM?\n\n\nProblem\n\n\nData analysis and synthesis are foundational in developing water resources management models (Loucks et al., 2005), and the way data are organized can enable or inhibit the analysis that water managers and researchers perform (Horsburgh et al., 2008).   \n\n\nCurrent practices to organize, manipulate and compare water resources data to develop water resources systems models are often specific to the data sources, models, and study location (Brown et al., 2015).   \n\n\nSource-, model-, and study area-specific practices arise because models have different data requirements for their components, store data in different file formats, have varying spatial coverage, use inconsistent metadata to describe methods, sources, and units, and use different vocabulary to name similar system components and their attributes (Laituri and Sternlieb, 2014; Maidment, 2016; Miller et al., 2004).   \n\n\nThis heterogeneity hampers potential synthesis of information from multiple studies (Brown et al., 2015), and source-, model-, and study area-specific practices often require considerable effort and time to develop models (Beniston et al., 2012; CUAHSI, 2005; Draper et al., 2003; Hey et al., 2009; Leonard and Duffy, 2013; Maidment, 2008; Michener, 2006; Miller et al., 2004; Ridley and Stoker, 2001; Watkins, 2013).   \n\n\nThe specificity in practices often makes them not readily reusable or applicable to other datasets and modes in the domain of water management data. \n\n\n\n\nFigure 1:\n Schematic of a systems water management network with two scenarios\n\n\nWater Management Data Domain\n\n\nThe water management data domain fundamentally includes natural and built water system components like water supply, infrastructure, and demand sites, represented through nodes and links (Brown et al., 2015; Loucks et al., 2005; Rosenberg and Madani, 2014).    \n\n\nThe domain also includes using multiple data types that represent quantitative and qualitative attributes of the system components like time series, seasonal parameters, and multi variable arrays. Example attribute data types are, time series of inflow and outflow of reservoirs, multi variable series of reservoir storage and surface area that change with elevation, and monthly seasonal reservoir evaporation across years. \n\n\n\n\nFigure 2:\n (A) Current practices use different systems and data manipulation methods for each data source and study area while WaMDaM method (B) will synthesize and compare data for multiple sources and study areas using one querying method \n\n\nSolution\n\n\nWhat can you do with WaMDaM not possible before?\n \n\n\nWaMDaM is an effort to standardize how we organize water management data which supports eight features altogether that partially exist in prior methods to enable users to: \n\n\n\n\nSupport different water resources systems components that are used in water management models like hydrology, infrastructure, and demand sites as reusable modules or sets of systems components.   \n\n\nRepresent connectivity and interactions between components in space through networks of nodes and links as used in systems modeling. \n\n\nSupport scenarios that track topologic changes in networks, metadata and data values. \n\n\nSupport multiple data types that are used in systems modeling like time series and multidimensional arrays.  \n\n\nUses consistent contextual metadata to unambiguously interpret data values.\n\n\nUses controlled vocabulary to relate inconsistent terms across data sources and models.  \n\n\nEnables conditional data queries to access and compare subsets of data and metadata \n\n\nDeveloped in an open-source software environment.", 
            "title": "Why WaMDaM?"
        }, 
        {
            "location": "/Why_WaMDaM/#why-wamdam", 
            "text": "", 
            "title": "Why WaMDaM?"
        }, 
        {
            "location": "/Why_WaMDaM/#problem", 
            "text": "Data analysis and synthesis are foundational in developing water resources management models (Loucks et al., 2005), and the way data are organized can enable or inhibit the analysis that water managers and researchers perform (Horsburgh et al., 2008).     Current practices to organize, manipulate and compare water resources data to develop water resources systems models are often specific to the data sources, models, and study location (Brown et al., 2015).     Source-, model-, and study area-specific practices arise because models have different data requirements for their components, store data in different file formats, have varying spatial coverage, use inconsistent metadata to describe methods, sources, and units, and use different vocabulary to name similar system components and their attributes (Laituri and Sternlieb, 2014; Maidment, 2016; Miller et al., 2004).     This heterogeneity hampers potential synthesis of information from multiple studies (Brown et al., 2015), and source-, model-, and study area-specific practices often require considerable effort and time to develop models (Beniston et al., 2012; CUAHSI, 2005; Draper et al., 2003; Hey et al., 2009; Leonard and Duffy, 2013; Maidment, 2008; Michener, 2006; Miller et al., 2004; Ridley and Stoker, 2001; Watkins, 2013).     The specificity in practices often makes them not readily reusable or applicable to other datasets and modes in the domain of water management data.    Figure 1:  Schematic of a systems water management network with two scenarios", 
            "title": "Problem"
        }, 
        {
            "location": "/Why_WaMDaM/#water-management-data-domain", 
            "text": "The water management data domain fundamentally includes natural and built water system components like water supply, infrastructure, and demand sites, represented through nodes and links (Brown et al., 2015; Loucks et al., 2005; Rosenberg and Madani, 2014).      The domain also includes using multiple data types that represent quantitative and qualitative attributes of the system components like time series, seasonal parameters, and multi variable arrays. Example attribute data types are, time series of inflow and outflow of reservoirs, multi variable series of reservoir storage and surface area that change with elevation, and monthly seasonal reservoir evaporation across years.    Figure 2:  (A) Current practices use different systems and data manipulation methods for each data source and study area while WaMDaM method (B) will synthesize and compare data for multiple sources and study areas using one querying method", 
            "title": "Water Management Data Domain"
        }, 
        {
            "location": "/Why_WaMDaM/#solution", 
            "text": "What can you do with WaMDaM not possible before?    WaMDaM is an effort to standardize how we organize water management data which supports eight features altogether that partially exist in prior methods to enable users to:    Support different water resources systems components that are used in water management models like hydrology, infrastructure, and demand sites as reusable modules or sets of systems components.     Represent connectivity and interactions between components in space through networks of nodes and links as used in systems modeling.   Support scenarios that track topologic changes in networks, metadata and data values.   Support multiple data types that are used in systems modeling like time series and multidimensional arrays.    Uses consistent contextual metadata to unambiguously interpret data values.  Uses controlled vocabulary to relate inconsistent terms across data sources and models.    Enables conditional data queries to access and compare subsets of data and metadata   Developed in an open-source software environment.", 
            "title": "Solution"
        }, 
        {
            "location": "/Rationale/", 
            "text": "Rationale and Context\n\n\nProblem\n\n\nWater managers and researchers spend a considerable time and effort to build software to communicate their results each time they develop a new water resources model. They also spend a large time to analyze and synthesize water management data into models. \n\n\nSolution\n\n\nMost of existing models use the traditional architecture which incorporate three integrated and tight coupled components i) graphical user interface (GUI), data management system ii), and iii) the model engine of algorithms (Harou et al., 2010). \n\n\nThere is an increasing interest to decouple the three components to allow the reuses of data and user interface across different models. WaM-DaM aims to provide a standard for the database component so other models can re-use the same data.\n\n\nRationale\n\n\nThe early ideas for a solution like WaMDaM came out from the work on \nHydraPlatform\n by UC Davis PhD Graduates between 2008 to 2010. HydraPlatform as an Open-Source Software Platform for Water Resource Management Models focused on providing a generic database, user interface, and data exporters to models. \nHydra\n in 2014-2016 improved HydroPlatform into a web-service. \nOpenAgua\n uses Hydra into web-based application for modeling water systems for water resources planning and management.\n\n\nSystems water management data lack a standardized method to organize and communicate its diverse and disparate data. Developing a persistent data model for water management data is an important step to advance how we communicate such vital data across disciplines. So the C-WATER team at Utah State University took the task to develop WaMDaM.\n\n\nThe development of WaMDaM has been part of an ambitious research project to develop cyberinfrastructure to advance the science of hydrology and water resources management. The project is called \u201cCyber-Infrastructure to Advance High Performance Water Resource Modelling\u201d \nCI-WATER\n. The CI-WATER Project was funded by the National Science Foundation (NSF) through grants \nEPS-1135482\n and \nEPS-1135483\n. The project comprises large interdisciplinary team of Utah and Wyoming researchers and concluded in October 2016\n\n\nThe CI-WATER project included researchers from Brigham Young University, the University of Utah, Utah State University, and the University of Wyoming. The project has received a $6 million, three-year award from the NSF to develop a better understanding of the interconnectivity of natural and human water resources systems \u2013 a critical environmental sustainability problem facing both Western states. CI-WATER aims also to simulate and study how factors such as population growth, shifting land uses and climate variability will impact water storage and availability in the Intermountain West. This award is made under the NSF Experimental Program to Stimulate Competitive Research (EPSCoR), which supports states' efforts to enhance research, science and mathematics education, and workforce development. \n\n\nAdd iUtah \n\n\nContext\n\n\nThe timing, availability of funds, expertise, and passion for WaMDaM development were incredible by all means. Along the way of WaMDaM development, there has been a real interest from national and international scientists and practitioners in standardizing the way we communicate systems water management data.\n\n\nWe were fortunate to discuss the development of WaMDaM with these research groups and agencies listed below. WaM-DaM and these projects complement each other and there is a big room for real future collaboration. We hope that our discussions with them continue so we can achieve our common goal of having a standard to communicate systems water management data. \n\n\n\n\n\n\n\n\n#\n\n\nProject\n\n\nAffiliation\n\n\n\n\n\n\n\n\n\n\n1\n\n\nHydra Platform: web-services to linking water resource network models, share data in an open data management platform\n\n\nUniversity of Manchester, United Kingdom\n\n\n\n\n\n\n2\n\n\nHOBBES\n:  a bottom up approach to improve and organize the data for water modeling efforts in California\n\n\nUniversity of California, Davis\n\n\n\n\n\n\n3\n\n\nADHydro\n: A Large-scale High-resolution Multi-physics Distributed Water Resources Model for Water Resources Simulations\n\n\nUniversity of Wyoming\n\n\n\n\n\n\n4\n\n\nWEAP\n: Water Evaluation And Planning System\n\n\nStockholm Environment Institute\n\n\n\n\n\n\n5\n\n\nRiverWare\n: a river system modeling tool\n\n\nCenter for Advanced Decision Support for Water and Environmental Systems (CADSWES). University of Colorado at Boulder\n\n\n\n\n\n\n6\n\n\nHEC-ResSim\n: The Reservoir System Simulation software\n\n\nU.S. Army Corps of Engineers, Institute for Water Resources, Hydrologic Engineering Center\n\n\n\n\n\n\n7\n\n\nIWRM\n: Integrated Water Resources Management\n\n\nThe Urban Water Group\n University of Utah\n\n\n\n\n\n\n8\n\n\nWaDE\n:The Water Data Exchange Program\n\n\nWestern States Water Council\n\n\n\n\n\n\n9\n\n\nManaging data for the state river basins water budgets models\n\n\nUtah Division of Water Resources\n\n\n\n\n\n\n10\n\n\nHydroShare\n:collaborative environment for sharing hydrologic data and models aimed at giving hydrologists the technology infrastructure they need to address critical issues related to water quantity, quality, accessibility, and management.\n\n\nUtah State University", 
            "title": "Rationale"
        }, 
        {
            "location": "/Rationale/#rationale-and-context", 
            "text": "", 
            "title": "Rationale and Context"
        }, 
        {
            "location": "/Rationale/#problem", 
            "text": "Water managers and researchers spend a considerable time and effort to build software to communicate their results each time they develop a new water resources model. They also spend a large time to analyze and synthesize water management data into models.", 
            "title": "Problem"
        }, 
        {
            "location": "/Rationale/#solution", 
            "text": "Most of existing models use the traditional architecture which incorporate three integrated and tight coupled components i) graphical user interface (GUI), data management system ii), and iii) the model engine of algorithms (Harou et al., 2010).   There is an increasing interest to decouple the three components to allow the reuses of data and user interface across different models. WaM-DaM aims to provide a standard for the database component so other models can re-use the same data.", 
            "title": "Solution"
        }, 
        {
            "location": "/Rationale/#rationale", 
            "text": "The early ideas for a solution like WaMDaM came out from the work on  HydraPlatform  by UC Davis PhD Graduates between 2008 to 2010. HydraPlatform as an Open-Source Software Platform for Water Resource Management Models focused on providing a generic database, user interface, and data exporters to models.  Hydra  in 2014-2016 improved HydroPlatform into a web-service.  OpenAgua  uses Hydra into web-based application for modeling water systems for water resources planning and management.  Systems water management data lack a standardized method to organize and communicate its diverse and disparate data. Developing a persistent data model for water management data is an important step to advance how we communicate such vital data across disciplines. So the C-WATER team at Utah State University took the task to develop WaMDaM.  The development of WaMDaM has been part of an ambitious research project to develop cyberinfrastructure to advance the science of hydrology and water resources management. The project is called \u201cCyber-Infrastructure to Advance High Performance Water Resource Modelling\u201d  CI-WATER . The CI-WATER Project was funded by the National Science Foundation (NSF) through grants  EPS-1135482  and  EPS-1135483 . The project comprises large interdisciplinary team of Utah and Wyoming researchers and concluded in October 2016  The CI-WATER project included researchers from Brigham Young University, the University of Utah, Utah State University, and the University of Wyoming. The project has received a $6 million, three-year award from the NSF to develop a better understanding of the interconnectivity of natural and human water resources systems \u2013 a critical environmental sustainability problem facing both Western states. CI-WATER aims also to simulate and study how factors such as population growth, shifting land uses and climate variability will impact water storage and availability in the Intermountain West. This award is made under the NSF Experimental Program to Stimulate Competitive Research (EPSCoR), which supports states' efforts to enhance research, science and mathematics education, and workforce development.   Add iUtah", 
            "title": "Rationale"
        }, 
        {
            "location": "/Rationale/#context", 
            "text": "The timing, availability of funds, expertise, and passion for WaMDaM development were incredible by all means. Along the way of WaMDaM development, there has been a real interest from national and international scientists and practitioners in standardizing the way we communicate systems water management data.  We were fortunate to discuss the development of WaMDaM with these research groups and agencies listed below. WaM-DaM and these projects complement each other and there is a big room for real future collaboration. We hope that our discussions with them continue so we can achieve our common goal of having a standard to communicate systems water management data.      #  Project  Affiliation      1  Hydra Platform: web-services to linking water resource network models, share data in an open data management platform  University of Manchester, United Kingdom    2  HOBBES :  a bottom up approach to improve and organize the data for water modeling efforts in California  University of California, Davis    3  ADHydro : A Large-scale High-resolution Multi-physics Distributed Water Resources Model for Water Resources Simulations  University of Wyoming    4  WEAP : Water Evaluation And Planning System  Stockholm Environment Institute    5  RiverWare : a river system modeling tool  Center for Advanced Decision Support for Water and Environmental Systems (CADSWES). University of Colorado at Boulder    6  HEC-ResSim : The Reservoir System Simulation software  U.S. Army Corps of Engineers, Institute for Water Resources, Hydrologic Engineering Center    7  IWRM : Integrated Water Resources Management  The Urban Water Group  University of Utah    8  WaDE :The Water Data Exchange Program  Western States Water Council    9  Managing data for the state river basins water budgets models  Utah Division of Water Resources    10  HydroShare :collaborative environment for sharing hydrologic data and models aimed at giving hydrologists the technology infrastructure they need to address critical issues related to water quantity, quality, accessibility, and management.  Utah State University", 
            "title": "Context"
        }, 
        {
            "location": "/Team/", 
            "text": "The WaMDaM Team\n\n\nWaMDaM deveopment has been led by Adel Abdallah for his PhD dissertation at Utah Water Research Lab, Utah State University under the advising of Dr. David Rosenberg.  \n\n\nThe timing, availability of funding, expertise, and passion for WaMDaM development were incredible by all means. We were encouraged by a great interest from national and international scientists and practitioners in standardizing the way we communicate systems water management data.\n\n\nAdel Abdallah\n \n\nPhD Candidate: Systems Analysis Informatics\n\nemail: \n\n\nDavid Rosenberg\n \n\nAssociate Professor: Systems Analysis\n\nemail: David.Rosenberg.edu\n\n\nDevelopers\n\n\nThese talented people helped in implementing and testing different aspects of the pseudocode of WaMDaM Wizard and adapting the controlled vocabulary system. Stephanie Reeder and Pabitra Dash provided valuable insights into the early design architecture.    \n\n* Jose Guerrero\n* Kevin Larry\n* Kwang Yingjien \n\n\nFeedback and Input from Colleages\n\n\nThese people in sevend institutions provided valuable feedback and insights into earlier designs and materials, they shared models and datasets, or exchanged informal discussions on WaMDaM design and its software at different stages of its development   \n\n\n\n\n\n\nUtah Water Research Laboratory and Utah State University\n \n\nDavid Tarboton, Jeffery Horsburgh, Pabitra Dash, Toney Castronova, Stephanie Reeder     \n\n\n\n\n\n\nUniversity of Manchester, UK\n   \n\nJulien Harou, Stephen Knox, and Philipp Meier\n\n\n\n\n\n\nUniversity of California, Davis\n \n\nJosue Medellin-Azuara, Quinn Hart, Jay Lund\n\n\n\n\n\n\nUniversity of Utah\n \n\nSteve Burian, Erfan Goharian     \n\n\n\n\n\n\nBrigham Young University, Utah\n \n\nDan Ames, Nathan Swain\n\n\n\n\n\n\nUniversity of Massachusetts Amhers\n \n\nDavid Rheinheimer  \n\n\n\n\n\n\nUniversity of Wyoming\n \n\nFred Ogden, Yoshiyuki Zen Igarashi", 
            "title": "The Team"
        }, 
        {
            "location": "/Team/#the-wamdam-team", 
            "text": "WaMDaM deveopment has been led by Adel Abdallah for his PhD dissertation at Utah Water Research Lab, Utah State University under the advising of Dr. David Rosenberg.    The timing, availability of funding, expertise, and passion for WaMDaM development were incredible by all means. We were encouraged by a great interest from national and international scientists and practitioners in standardizing the way we communicate systems water management data.  Adel Abdallah   \nPhD Candidate: Systems Analysis Informatics \nemail:   David Rosenberg   \nAssociate Professor: Systems Analysis \nemail: David.Rosenberg.edu", 
            "title": "The WaMDaM Team"
        }, 
        {
            "location": "/Team/#developers", 
            "text": "These talented people helped in implementing and testing different aspects of the pseudocode of WaMDaM Wizard and adapting the controlled vocabulary system. Stephanie Reeder and Pabitra Dash provided valuable insights into the early design architecture.     \n* Jose Guerrero\n* Kevin Larry\n* Kwang Yingjien", 
            "title": "Developers"
        }, 
        {
            "location": "/Team/#feedback-and-input-from-colleages", 
            "text": "These people in sevend institutions provided valuable feedback and insights into earlier designs and materials, they shared models and datasets, or exchanged informal discussions on WaMDaM design and its software at different stages of its development       Utah Water Research Laboratory and Utah State University   \nDavid Tarboton, Jeffery Horsburgh, Pabitra Dash, Toney Castronova, Stephanie Reeder         University of Manchester, UK     \nJulien Harou, Stephen Knox, and Philipp Meier    University of California, Davis   \nJosue Medellin-Azuara, Quinn Hart, Jay Lund    University of Utah   \nSteve Burian, Erfan Goharian         Brigham Young University, Utah   \nDan Ames, Nathan Swain    University of Massachusetts Amhers   \nDavid Rheinheimer      University of Wyoming   \nFred Ogden, Yoshiyuki Zen Igarashi", 
            "title": "Feedback and Input from Colleages"
        }, 
        {
            "location": "/Publications/", 
            "text": "WaMDaM publications\n\n\nBelow are lists of all the presentations and publications on WaMDaM products since inception.  \n\n\nThey reflect the progression of ideas and discussions over five years that shaped the final WaMDaM product presented here.  \n\n\nThey also reflect the type and mumber of audiences that WaMDaM was presented to and ultimately benefited from their feedback.    \n\n\nPeer-reviewed journal articles\n\n\n\n\n\n\nPrepared: A New Information Model to Organize, Identify, and Compare Water Management Data\nfor Systems Models. Journal of Environmental Modelling and Software  \n\n\n\n\n\n\nIn preparation:\n\n\n\n\n\n\nIn preparation:\n\n\n\n\n\n\nPeer-reviewed conference articles\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2014). \nWaM-DaM: A Data Model to Organize and Synthesize Water Management Data\n. 7\nth\n International Congress on Environmental Modelling and Software. International Environmental Modelling and Software Society (iEMSs)\n\n\n\n\nReports and summaries\n\n\n\n\n\n\nAdel M. Abdalla and David Rosenberg (2015) \nFact Sheet: A General Relational Model to Organize Water Management Data\n(WaM-DaM)\n. Workshop: Modernizing Data Management of System Modeling. University of California, Davis. Dec 2015 \n\n\n\n\n\n\nAdel M. Abdalla and David Rosenberg (2013). \nThe Water Management Data Model (WaM-DaM): A Universal Standard to Communicate Water Systems\n. A summary to share with collaborators. Dec 2013\n\n\n\n\n\n\nAdel M. Abdallah (2013). \nInvestigate the Capability of Arc Hydro Framework to Represent Water Management Data\n Class Term Project Report, GIS in Water Resources, Utah State University Nov, 2013.\n\n\n\n\n\n\nAdel M. Abdallah, Jason Randall, Jason Smith, and Maxwell Barrus (2013) \nA Water Management Data Model\n Class Term Project Report. Database Implementation, Utah State University, April 2013    \n\n\n\n\n\n\nAdel M. Abdallah (2012)\nDesign Reservoir Conceptual Data Model\n. Class Term Project Report, Hydroinformatics, Utah State University Dec 2012.\n\n\n\n\n\n\nWorkshops\n\n\n\n\nAdel Abdallah and David Rosenberg (2015) \nWaM-DaM Workshop: Discover what water management data is available to run a WEAP model\n3\nrd\n CUAHSI Conference on Hydroinformatics Model and Data Interoperability: From Theory to Practice July 15-17, 2015, Tuscaloosa, AL  \n\n\n\n\nConference posters\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2015) \nA Relational Model to Organize and Synthesize Disparate Systems Water Management Data\n. Model and Data Interoperability: From Theory to Practice July 15-17, 2015, University of Alabama and the National Water Center, Tuscaloosa, AL  \n\n\n\n\n\n\nAdel M. Abdallah, David E. Rosenberg (2014).\nWaM-DaM: A Data Model to Organize and Synthesize Water Management Data\n  International Environmental Modelling and Software Society (iEMSs) 7\nth\n Intl. Congress on Env. Modelling and Software, San Diego, CA, USA.  \n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2013). \nA Relational Data Model for Water Management Data\n CUASHI Conference on Hydroinformatics and Modeling, Logan, UT: July 17-19, 2013. \n\n\n\n\n\n\nConference presentations\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2017). \nA New Method to Organize, Identify, and Compare Water Management Data for Systems Models\n. World Environmental \n Water Resources Congress, sacramento, CA: May 21-25, 2017.\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2015). \nApplying Best Data Practices to Work with Water Management Data (WaM-DaM)\n. UC \nInvited\n UC Davis Workshop. Dec 2015\n\n\n\n\n\n\nAdel M. Abdallah (2015). \nAfter 50 years of water data collection and modeling, how can we universally organize water management data?\n Utah Water Research Laboratory Alumni Open House: 50\nth\n Anniversary. Oct 2015  \n\n\n\n\n\n\nAdel M. Abdallah (2015). \nA Relational Model, Workflows, and Parallel Computing to Improve Water Resources Modeling and Management\n. PhD Dissertation Proposal Defense, Utah State University. Dec 2015\n\n\n\n\n\n\nAdel M. Abdallah (2015).\nWaM-DaM: A Data Model to Organize, Share, and Publish Water Management Data\nWater and Environmnetla Engineering Gradudate Seminar. April 2014 \n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2014). \nWaM-DaM: A Data Model to Organize and Synthesize Water Management\n. Data Utah Water Data Users Group 2\nnd\n Meeting, Salt Lake City, Utah: Jan. 27, 2015.\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2014). \nWaM-DaM: A Data Model to Synthesize and Organize Water Management Data\n. World Environmental \n Water Resources Congress, Portland, OR: June 1-5, 2014.\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2014). \nWaM-DaM: A Data Model to Organize, Share, and Publish Water Management Data\n American Water Resources Association (AWRA) Spring Specialty Conference\". Snowbird, Utah, USA. May 12-14, 2014\n\n\n\n\n\n\nAdel M. Abdallah and David E. Rosenberg (2014).\nData Model and High Performance Computing Tools to Advance Water Resources Management and Modeling\n.CI-Water Symposium. Salt lake City, Utah. Feb 2014. \n\n\n\n\n\n\nAdel M. Abdallah (2013). \nDesign a Database to Manage Water Reservoir Data\n. Public outreach. CI-Water Symposium May 2013. Salt Lake City, Utah.", 
            "title": "Publications"
        }, 
        {
            "location": "/Publications/#wamdam-publications", 
            "text": "Below are lists of all the presentations and publications on WaMDaM products since inception.    They reflect the progression of ideas and discussions over five years that shaped the final WaMDaM product presented here.    They also reflect the type and mumber of audiences that WaMDaM was presented to and ultimately benefited from their feedback.", 
            "title": "WaMDaM publications"
        }, 
        {
            "location": "/Publications/#peer-reviewed-journal-articles", 
            "text": "Prepared: A New Information Model to Organize, Identify, and Compare Water Management Data\nfor Systems Models. Journal of Environmental Modelling and Software      In preparation:    In preparation:", 
            "title": "Peer-reviewed journal articles"
        }, 
        {
            "location": "/Publications/#peer-reviewed-conference-articles", 
            "text": "Adel M. Abdallah and David E. Rosenberg (2014).  WaM-DaM: A Data Model to Organize and Synthesize Water Management Data . 7 th  International Congress on Environmental Modelling and Software. International Environmental Modelling and Software Society (iEMSs)", 
            "title": "Peer-reviewed conference articles"
        }, 
        {
            "location": "/Publications/#reports-and-summaries", 
            "text": "Adel M. Abdalla and David Rosenberg (2015)  Fact Sheet: A General Relational Model to Organize Water Management Data\n(WaM-DaM) . Workshop: Modernizing Data Management of System Modeling. University of California, Davis. Dec 2015     Adel M. Abdalla and David Rosenberg (2013).  The Water Management Data Model (WaM-DaM): A Universal Standard to Communicate Water Systems . A summary to share with collaborators. Dec 2013    Adel M. Abdallah (2013).  Investigate the Capability of Arc Hydro Framework to Represent Water Management Data  Class Term Project Report, GIS in Water Resources, Utah State University Nov, 2013.    Adel M. Abdallah, Jason Randall, Jason Smith, and Maxwell Barrus (2013)  A Water Management Data Model  Class Term Project Report. Database Implementation, Utah State University, April 2013        Adel M. Abdallah (2012) Design Reservoir Conceptual Data Model . Class Term Project Report, Hydroinformatics, Utah State University Dec 2012.", 
            "title": "Reports and summaries"
        }, 
        {
            "location": "/Publications/#workshops", 
            "text": "Adel Abdallah and David Rosenberg (2015)  WaM-DaM Workshop: Discover what water management data is available to run a WEAP model 3 rd  CUAHSI Conference on Hydroinformatics Model and Data Interoperability: From Theory to Practice July 15-17, 2015, Tuscaloosa, AL", 
            "title": "Workshops"
        }, 
        {
            "location": "/Publications/#conference-posters", 
            "text": "Adel M. Abdallah and David E. Rosenberg (2015)  A Relational Model to Organize and Synthesize Disparate Systems Water Management Data . Model and Data Interoperability: From Theory to Practice July 15-17, 2015, University of Alabama and the National Water Center, Tuscaloosa, AL      Adel M. Abdallah, David E. Rosenberg (2014). WaM-DaM: A Data Model to Organize and Synthesize Water Management Data   International Environmental Modelling and Software Society (iEMSs) 7 th  Intl. Congress on Env. Modelling and Software, San Diego, CA, USA.      Adel M. Abdallah and David E. Rosenberg (2013).  A Relational Data Model for Water Management Data  CUASHI Conference on Hydroinformatics and Modeling, Logan, UT: July 17-19, 2013.", 
            "title": "Conference posters"
        }, 
        {
            "location": "/Publications/#conference-presentations", 
            "text": "Adel M. Abdallah and David E. Rosenberg (2017).  A New Method to Organize, Identify, and Compare Water Management Data for Systems Models . World Environmental   Water Resources Congress, sacramento, CA: May 21-25, 2017.    Adel M. Abdallah and David E. Rosenberg (2015).  Applying Best Data Practices to Work with Water Management Data (WaM-DaM) . UC  Invited  UC Davis Workshop. Dec 2015    Adel M. Abdallah (2015).  After 50 years of water data collection and modeling, how can we universally organize water management data?  Utah Water Research Laboratory Alumni Open House: 50 th  Anniversary. Oct 2015      Adel M. Abdallah (2015).  A Relational Model, Workflows, and Parallel Computing to Improve Water Resources Modeling and Management . PhD Dissertation Proposal Defense, Utah State University. Dec 2015    Adel M. Abdallah (2015). WaM-DaM: A Data Model to Organize, Share, and Publish Water Management Data Water and Environmnetla Engineering Gradudate Seminar. April 2014     Adel M. Abdallah and David E. Rosenberg (2014).  WaM-DaM: A Data Model to Organize and Synthesize Water Management . Data Utah Water Data Users Group 2 nd  Meeting, Salt Lake City, Utah: Jan. 27, 2015.    Adel M. Abdallah and David E. Rosenberg (2014).  WaM-DaM: A Data Model to Synthesize and Organize Water Management Data . World Environmental   Water Resources Congress, Portland, OR: June 1-5, 2014.    Adel M. Abdallah and David E. Rosenberg (2014).  WaM-DaM: A Data Model to Organize, Share, and Publish Water Management Data  American Water Resources Association (AWRA) Spring Specialty Conference\". Snowbird, Utah, USA. May 12-14, 2014    Adel M. Abdallah and David E. Rosenberg (2014). Data Model and High Performance Computing Tools to Advance Water Resources Management and Modeling .CI-Water Symposium. Salt lake City, Utah. Feb 2014.     Adel M. Abdallah (2013).  Design a Database to Manage Water Reservoir Data . Public outreach. CI-Water Symposium May 2013. Salt Lake City, Utah.", 
            "title": "Conference presentations"
        }, 
        {
            "location": "/OpenSource/", 
            "text": "Open Source\n\n\nWaMDaM is an \nopen-source\n and open-science project under the \nBSD 3-Clause License\n. We invite the systems modeling and hydroinformatics communities to use, experiment with, and provide feedback on WaMDaM.   \n\n\nAll source-code and documentations are available on the \nWaMDaM Project GitHub\n\n\nUltimately we aspire to improve WaMDaM and work towards the goal of developing a standard to share and publish systems water management data.", 
            "title": "Open Source"
        }, 
        {
            "location": "/OpenSource/#open-source", 
            "text": "WaMDaM is an  open-source  and open-science project under the  BSD 3-Clause License . We invite the systems modeling and hydroinformatics communities to use, experiment with, and provide feedback on WaMDaM.     All source-code and documentations are available on the  WaMDaM Project GitHub  Ultimately we aspire to improve WaMDaM and work towards the goal of developing a standard to share and publish systems water management data.", 
            "title": "Open Source"
        }, 
        {
            "location": "/Limitations/", 
            "text": "Limitations and Future Work\n\n\nThe design of WaMDaM and its quest towards generality have limitations in these two main areas which constitute opportunities for future work. \n\n\nLimitation 1: Use cases\n\n\nThe identified six use cases are basic examples and do not necessarily cover the complexity of the domain of systems water management nor do they cover all the possibilities of how the community of users want to use data. The reviewed data systems and the key features are not necessarily comprehensive of the large inventory of existing systems and the complexity of their data. The used twelve data sources are example datasets and do not necessarily represent the diversity of used data in the field. The example controlled vocabulary are preliminary and need a robust method on how to define and expand them. \n\n\nFuture work may test and improve WaMDaM abilities to work with a larger set of use cases, other models and their results, and data sources in other study areas. With a larger set of data, future work is needed to create a more robust method to define, relate, specify terms for water management data and expand the list of available vocabularies similar to the work on semantic annotation for hydrologic sciences by Piasecki and Beran (2009). This is especially needed for the \u201cInstance Name\u201d controlled term because of the large number of infrastructure instances that could reach thousands or even millions. So there is a need for a robust method to name and organize a potentially growing controlled instance names. The method could benefit from the USGS convention of naming their gage stations that include the institution, site code, name and nearby town or and state.\n\n\nLimitation 2: Software\n\n\nThe designed tools to support loading data into WaMDaM database are basic and require further testing and improvement to be more user-friendly. SQLite database and the WaMDaM Wizard in a desktop setting allow one user at-a-time to store and access data. Future work may build a software ecosystem to allow multiple users to store, access, visualize, and share data using a suite of webservers and tools. Such ecosystem would need to define a standardized machine-readable data encoding method to exchange data over the web and between models. Building additional data importers into WaMDaM would speed data loading and validations in WaMDaM and thus enable larger data integration and discovery. Further participation by others will expand usefulness of a future WaMDaM data system.\n\n\nLimitation 3: Community/Users\n\n\nThroughout WaMDaM development, we presented and discussed WaMDaM goals, use cases, designs, and results in eight regional, national, and international conferences, workshops, and professional meetings. We solicited informal feedback at different stages of the development from collaborators at seven different universities. It is by no means a representative of the water resources community but provided us with important insights. Future improvements should involve a larger community with more formal structure like surveys to guide a more robust and generic information model. \n\n\nWe introduce WaMDaM method as a beginning to solve the problem within the bounded limitations above. It will become more useful as users\n\n\n\n\nBuild more software tools to automate loading data into WaMDaM\n\n\nFeed WaMDaM with more diverse datasets in other areas\n\n\nAccurately register the datasets native terms\n\n\nShare and publish their WaMDaM data with others.\n\n\n\n\nAlthough the development of WaMDaM has focused on water management data, none of the information model concepts are necessarily exclusive to water management. In principal, WaMDaM could be used for other systems based data like for water, energy, and food nexus but that is yet to be tested and demonstrated with use cases. \n\n\nInvitation\n\n\nWe invite the systems modeling and hydroinformatics community to experiment with and provide feedback on WaMDaM to improve it and work towards the goal of developing a standard as the basis for a software ecosystem to organize, visualize, publish, and discover systems water management data over the web.", 
            "title": "Limitations"
        }, 
        {
            "location": "/Limitations/#limitations-and-future-work", 
            "text": "The design of WaMDaM and its quest towards generality have limitations in these two main areas which constitute opportunities for future work.", 
            "title": "Limitations and Future Work"
        }, 
        {
            "location": "/Limitations/#limitation-1-use-cases", 
            "text": "The identified six use cases are basic examples and do not necessarily cover the complexity of the domain of systems water management nor do they cover all the possibilities of how the community of users want to use data. The reviewed data systems and the key features are not necessarily comprehensive of the large inventory of existing systems and the complexity of their data. The used twelve data sources are example datasets and do not necessarily represent the diversity of used data in the field. The example controlled vocabulary are preliminary and need a robust method on how to define and expand them.   Future work may test and improve WaMDaM abilities to work with a larger set of use cases, other models and their results, and data sources in other study areas. With a larger set of data, future work is needed to create a more robust method to define, relate, specify terms for water management data and expand the list of available vocabularies similar to the work on semantic annotation for hydrologic sciences by Piasecki and Beran (2009). This is especially needed for the \u201cInstance Name\u201d controlled term because of the large number of infrastructure instances that could reach thousands or even millions. So there is a need for a robust method to name and organize a potentially growing controlled instance names. The method could benefit from the USGS convention of naming their gage stations that include the institution, site code, name and nearby town or and state.", 
            "title": "Limitation 1: Use cases"
        }, 
        {
            "location": "/Limitations/#limitation-2-software", 
            "text": "The designed tools to support loading data into WaMDaM database are basic and require further testing and improvement to be more user-friendly. SQLite database and the WaMDaM Wizard in a desktop setting allow one user at-a-time to store and access data. Future work may build a software ecosystem to allow multiple users to store, access, visualize, and share data using a suite of webservers and tools. Such ecosystem would need to define a standardized machine-readable data encoding method to exchange data over the web and between models. Building additional data importers into WaMDaM would speed data loading and validations in WaMDaM and thus enable larger data integration and discovery. Further participation by others will expand usefulness of a future WaMDaM data system.", 
            "title": "Limitation 2: Software"
        }, 
        {
            "location": "/Limitations/#limitation-3-communityusers", 
            "text": "Throughout WaMDaM development, we presented and discussed WaMDaM goals, use cases, designs, and results in eight regional, national, and international conferences, workshops, and professional meetings. We solicited informal feedback at different stages of the development from collaborators at seven different universities. It is by no means a representative of the water resources community but provided us with important insights. Future improvements should involve a larger community with more formal structure like surveys to guide a more robust and generic information model.   We introduce WaMDaM method as a beginning to solve the problem within the bounded limitations above. It will become more useful as users   Build more software tools to automate loading data into WaMDaM  Feed WaMDaM with more diverse datasets in other areas  Accurately register the datasets native terms  Share and publish their WaMDaM data with others.   Although the development of WaMDaM has focused on water management data, none of the information model concepts are necessarily exclusive to water management. In principal, WaMDaM could be used for other systems based data like for water, energy, and food nexus but that is yet to be tested and demonstrated with use cases.", 
            "title": "Limitation 3: Community/Users"
        }, 
        {
            "location": "/Limitations/#invitation", 
            "text": "We invite the systems modeling and hydroinformatics community to experiment with and provide feedback on WaMDaM to improve it and work towards the goal of developing a standard as the basis for a software ecosystem to organize, visualize, publish, and discover systems water management data over the web.", 
            "title": "Invitation"
        }, 
        {
            "location": "/SponsorsCredit/", 
            "text": "Sponsors and Credit\n\n\nFunding\n\n\nWaMDaM and related software designs have been developed under funding from several different sources. It was primarily supported by the National Science Foundation \n(NSF)\n under the \nCI-Water Project\n grant 1135482 and later from the \niUtah Project\n under Grant 1208732. \n\nUtah Water Research Lab\n at Utah State University, Logan Utah provided additional funding through Mineral Lease Funds. \n\n\nAcknowledgement\n\n\nThe following people provided valuable feedback and insights into earlier designs and materials of WaMDaM: David Tarboton, Jeffery Horsburgh, Pabitra Dash, Toney Castronova at the Utah Water Research Laboratory and Utah State University, Julien Harou, Stephen Knox, and Philipp Meier at Manchester University, Josue Medellin-Azuara and Quinn Hart at the University of California, Davis. Dan Ames at Brigham Young University, Utah. We thank our collaborators and our research group for their feedback. \n\n\nSpecial thanks to the \nODM2\n team for promoting #OpenScience by publishing their source code. There is no doubt that WaMDaM development has benefited from the ideas and tools used in ODM2.\n\n\nAdel Abdallah appreciates the hospitability of Steve Burian and his \n Urban Water Research Group \n at the \n University of Utah \n, Salt Lake City for hosting him as a Visiting Scholar during 2014/2017 while developing WaMDaM. Adel also enjoyed being part of the \n\nGlobal Change \n Sustainability Center\n and has learned much from their interdecplnary Seminar Series.\n\n\nAppreciation\n\n\nAdel Abdallah is especially thankful to the following organizations for their funding through scholarships and awards  \n\n\n\n\n\n\nAmerican Public Works Association, Utah Chapter Graduate Scholarship, 2016  \n\n\n\n\n\n\nPresident's Award and Scholarship. Utah State University Student Association, 2015  \n\n\n\n\n\n\nPaul Riley AWRA Utah Section: Student Water Conference \n Paper Competition, 2015  \n\n\n\n\n\n\nUtah Water Users Association Scholarship, 2013  \n\n\n\n\n\n\nGraduate Enhancement Award. Graduate Student Senate at Utah State University, 2013 \n\n\n\n\n\n\nPhD Research Assistantship. Utah State University 2012-2017\n\n\n\n\n\n\nDisclaimer\n\n\nAny opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.", 
            "title": "Sponsors and Credit"
        }, 
        {
            "location": "/SponsorsCredit/#sponsors-and-credit", 
            "text": "", 
            "title": "Sponsors and Credit"
        }, 
        {
            "location": "/SponsorsCredit/#funding", 
            "text": "WaMDaM and related software designs have been developed under funding from several different sources. It was primarily supported by the National Science Foundation  (NSF)  under the  CI-Water Project  grant 1135482 and later from the  iUtah Project  under Grant 1208732.  Utah Water Research Lab  at Utah State University, Logan Utah provided additional funding through Mineral Lease Funds.", 
            "title": "Funding"
        }, 
        {
            "location": "/SponsorsCredit/#acknowledgement", 
            "text": "The following people provided valuable feedback and insights into earlier designs and materials of WaMDaM: David Tarboton, Jeffery Horsburgh, Pabitra Dash, Toney Castronova at the Utah Water Research Laboratory and Utah State University, Julien Harou, Stephen Knox, and Philipp Meier at Manchester University, Josue Medellin-Azuara and Quinn Hart at the University of California, Davis. Dan Ames at Brigham Young University, Utah. We thank our collaborators and our research group for their feedback.   Special thanks to the  ODM2  team for promoting #OpenScience by publishing their source code. There is no doubt that WaMDaM development has benefited from the ideas and tools used in ODM2.  Adel Abdallah appreciates the hospitability of Steve Burian and his   Urban Water Research Group   at the   University of Utah  , Salt Lake City for hosting him as a Visiting Scholar during 2014/2017 while developing WaMDaM. Adel also enjoyed being part of the  Global Change   Sustainability Center  and has learned much from their interdecplnary Seminar Series.", 
            "title": "Acknowledgement"
        }, 
        {
            "location": "/SponsorsCredit/#appreciation", 
            "text": "Adel Abdallah is especially thankful to the following organizations for their funding through scholarships and awards      American Public Works Association, Utah Chapter Graduate Scholarship, 2016      President's Award and Scholarship. Utah State University Student Association, 2015      Paul Riley AWRA Utah Section: Student Water Conference   Paper Competition, 2015      Utah Water Users Association Scholarship, 2013      Graduate Enhancement Award. Graduate Student Senate at Utah State University, 2013     PhD Research Assistantship. Utah State University 2012-2017", 
            "title": "Appreciation"
        }, 
        {
            "location": "/SponsorsCredit/#disclaimer", 
            "text": "Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.", 
            "title": "Disclaimer"
        }, 
        {
            "location": "/License/", 
            "text": "BSD 3-Clause License\n\n\n\n\nBerkeley Software Distribution (BSD)\n\n\nCopyright \n 2017, Adel M. Abdallah and David E. Rosenberg\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n\n\n\n\n\nRedistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n\n\n\n\n\nRedistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n\n\n\n\n\nNeither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\n\n\n\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "License"
        }, 
        {
            "location": "/License/#bsd-3-clause-license", 
            "text": "Berkeley Software Distribution (BSD)  Copyright   2017, Adel M. Abdallah and David E. Rosenberg\nAll rights reserved.  Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:    Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.    Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.    Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "BSD 3-Clause License"
        }, 
        {
            "location": "/Getting_started/Steps/", 
            "text": "Getting Started\n\n\nFollow these eight steps in order to install WaMDaM Wizard, populate your data into WaMDaM SQLite database, and implement use cases. \n\n\n1. Install WaMDaM Wizard\n\n\nWaMDaM Wizard is a desktop data loader from a spreadsheet template to a SQLite database. The SQLite database is created based on the WaMDaM data model. \nDownload the software for Windows 7 or 10 64 bit from the table below. You also can find out all the \nWaMDaM_Wizard releases\n on GitHub.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChoose one\n\n\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nExecutable (.exe) [230 MB]\n\n\nDownload\n\n\nGood option if you don't have Admin access to install it\n\n\n\n\n\n\nInstaller (msi) [27 MB]\n\n\nDownload\n\n\nLighter to donwload and probably faster to run\n\n\n\n\n\n\nRun from source code\n\n\n\n\nGood option to debug potential issues and improve it\n\n\n\n\n\n\n\n\nOnce you installed the Wizard, double click at the Wizard's shortcut and this main window should appear.  \n\n\n\n\n2. Connect to SQLite\n\n\nIn WaMDaM Wizard you can either create and connect to a new or existing SQLite database instance on your machine. The Wizard automatically creats a blank WaMDaM SQLite file for you based on WaMDaM data model schema.   \n\n\n3. Prepare your data into Excel\n\n\nFollow the \ninstructions here\n on how to prepare your data into WaMDaM Excel Workbook and register terms with controlled vocabulary. \n\n\n4. Use the Wizard importers\n\n\n\n\nImport from Excel workbooks your prepared in Step 3\n\n\nImporters time series data from CUAHSI\n\n\nImport reservoir related data from the US Reclamation Water Information System. \n\n\n\n\n5. Open the SQLite database\n\n\nUse the SQLite Manager to inspect the loaded data into WaMDaM. If you dont have it, download and install the Mozilla Firefox SQLite Manager Add-on and use it to open the SQLite database file. \nFollow these \nsteps\n here.    \n\n\n6. Execute use case queries\n\n\nUse and adapt queries from WaMDaM use cases and execute them in the SQLite Manager. \n\n\n7. Compare scenarios\n\n\n8. Visualize query results\n\n\nUse and adapt Python scripts to v", 
            "title": "Steps"
        }, 
        {
            "location": "/Getting_started/Steps/#getting-started", 
            "text": "Follow these eight steps in order to install WaMDaM Wizard, populate your data into WaMDaM SQLite database, and implement use cases.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/Getting_started/Steps/#1-install-wamdam-wizard", 
            "text": "WaMDaM Wizard is a desktop data loader from a spreadsheet template to a SQLite database. The SQLite database is created based on the WaMDaM data model. \nDownload the software for Windows 7 or 10 64 bit from the table below. You also can find out all the  WaMDaM_Wizard releases  on GitHub.       Choose one   Note      Executable (.exe) [230 MB]  Download  Good option if you don't have Admin access to install it    Installer (msi) [27 MB]  Download  Lighter to donwload and probably faster to run    Run from source code   Good option to debug potential issues and improve it     Once you installed the Wizard, double click at the Wizard's shortcut and this main window should appear.", 
            "title": "1. Install WaMDaM Wizard"
        }, 
        {
            "location": "/Getting_started/Steps/#2-connect-to-sqlite", 
            "text": "In WaMDaM Wizard you can either create and connect to a new or existing SQLite database instance on your machine. The Wizard automatically creats a blank WaMDaM SQLite file for you based on WaMDaM data model schema.", 
            "title": "2. Connect to SQLite"
        }, 
        {
            "location": "/Getting_started/Steps/#3-prepare-your-data-into-excel", 
            "text": "Follow the  instructions here  on how to prepare your data into WaMDaM Excel Workbook and register terms with controlled vocabulary.", 
            "title": "3. Prepare your data into Excel"
        }, 
        {
            "location": "/Getting_started/Steps/#4-use-the-wizard-importers", 
            "text": "Import from Excel workbooks your prepared in Step 3  Importers time series data from CUAHSI  Import reservoir related data from the US Reclamation Water Information System.", 
            "title": "4. Use the Wizard importers"
        }, 
        {
            "location": "/Getting_started/Steps/#5-open-the-sqlite-database", 
            "text": "Use the SQLite Manager to inspect the loaded data into WaMDaM. If you dont have it, download and install the Mozilla Firefox SQLite Manager Add-on and use it to open the SQLite database file. \nFollow these  steps  here.", 
            "title": "5. Open the SQLite database"
        }, 
        {
            "location": "/Getting_started/Steps/#6-execute-use-case-queries", 
            "text": "Use and adapt queries from WaMDaM use cases and execute them in the SQLite Manager.", 
            "title": "6. Execute use case queries"
        }, 
        {
            "location": "/Getting_started/Steps/#7-compare-scenarios", 
            "text": "", 
            "title": "7. Compare scenarios"
        }, 
        {
            "location": "/Getting_started/Steps/#8-visualize-query-results", 
            "text": "Use and adapt Python scripts to v", 
            "title": "8. Visualize query results"
        }, 
        {
            "location": "/Getting_started/PrepareData/", 
            "text": "Prepare your data\n\n\nDownload the WaMDaM Workbook\n\n\nTemplates for Input Data to prepare your data into it. Each dataset into one workbook\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDonwlaod\n\n\n\n\nUse it for\n\n\n\n\n\n\n\n\n\n\nWaMDaM Workbook Template\n\n\nDownload\n\n\nGeneric template for any data source to WaMDaM\n\n\n\n\n\n\nPrepre shapefile template\n\n\nDownload\n\n\nTransform the shapefile columns into WaMDaM sheets\n\n\n\n\n\n\nPrepare time series template\n\n\nDownload\n\n\nTransform time series data into WaMDaM sheets\n\n\n\n\n\n\nPrepare seasonal data template\n\n\nDownload\n\n\nTransform seasonal data into WaMDaM sheets\n\n\n\n\n\n\n\n\nWhy Excel?\n\n\nWe chose Excel as a generic input data medium with a custom Excel workbook that has 17 sheets with fixed column headers for the main tables of input data in WaMDaM. Each dataset is prepared to a single workbook one-at-a-time. The sheets are related with each other through dropdown lists to help users for example to relate metadata elements to the attributes and data values\n\n\nThe Wizard maps all the bridge tables\u2019 complex relationships and users do not need to know anything about primary or foreign keys.\n\n\nPreprare data order\n\n\nFirst\n: Load the controlled vocabulary or leave them blank.  \n\nControlled vocabulary are available in the template workbook and users can update them in a button on the workbook\u2019s homepage sheet. The button calls the online registry application user interface and updates the list of vocabularies in the sheet. Then the CVs are available as dropdown lists in each sheet where they apply.  \n\n\nSecond\n: Define metadata that will be used for the Attributes and Instances.   \n\n\nThird\n: Define the data structure of Object Types and Attributes. \n\n\nFourth\n: Add the master network, scenario, and nodes and links. \n\n\nFifth\n: Load data values to each attribute of each Instance. \n\n\nSimple case\n\n\nUsers have to populate at least six sheets for any dataset and they can populate more as the complexity of the dataset increases. In a simple case, the three sheets of Organizations\nPeople, Sources\nMethods, Networks\nScenarios can be populated with only two rows each.", 
            "title": "Prepare Data"
        }, 
        {
            "location": "/Getting_started/PrepareData/#prepare-your-data", 
            "text": "", 
            "title": "Prepare your data"
        }, 
        {
            "location": "/Getting_started/PrepareData/#download-the-wamdam-workbook", 
            "text": "Templates for Input Data to prepare your data into it. Each dataset into one workbook       Donwlaod   Use it for      WaMDaM Workbook Template  Download  Generic template for any data source to WaMDaM    Prepre shapefile template  Download  Transform the shapefile columns into WaMDaM sheets    Prepare time series template  Download  Transform time series data into WaMDaM sheets    Prepare seasonal data template  Download  Transform seasonal data into WaMDaM sheets", 
            "title": "Download the WaMDaM Workbook"
        }, 
        {
            "location": "/Getting_started/PrepareData/#why-excel", 
            "text": "We chose Excel as a generic input data medium with a custom Excel workbook that has 17 sheets with fixed column headers for the main tables of input data in WaMDaM. Each dataset is prepared to a single workbook one-at-a-time. The sheets are related with each other through dropdown lists to help users for example to relate metadata elements to the attributes and data values  The Wizard maps all the bridge tables\u2019 complex relationships and users do not need to know anything about primary or foreign keys.", 
            "title": "Why Excel?"
        }, 
        {
            "location": "/Getting_started/PrepareData/#preprare-data-order", 
            "text": "First : Load the controlled vocabulary or leave them blank.   \nControlled vocabulary are available in the template workbook and users can update them in a button on the workbook\u2019s homepage sheet. The button calls the online registry application user interface and updates the list of vocabularies in the sheet. Then the CVs are available as dropdown lists in each sheet where they apply.    Second : Define metadata that will be used for the Attributes and Instances.     Third : Define the data structure of Object Types and Attributes.   Fourth : Add the master network, scenario, and nodes and links.   Fifth : Load data values to each attribute of each Instance.", 
            "title": "Preprare data order"
        }, 
        {
            "location": "/Getting_started/PrepareData/#simple-case", 
            "text": "Users have to populate at least six sheets for any dataset and they can populate more as the complexity of the dataset increases. In a simple case, the three sheets of Organizations People, Sources Methods, Networks Scenarios can be populated with only two rows each.", 
            "title": "Simple case"
        }, 
        {
            "location": "/Getting_started/Use_Wizard/", 
            "text": "Instructions to use the Wizard", 
            "title": "Use Wizard"
        }, 
        {
            "location": "/Getting_started/Use_Wizard/#instructions-to-use-the-wizard", 
            "text": "", 
            "title": "Instructions to use the Wizard"
        }, 
        {
            "location": "/Getting_started/CompareScenarios/", 
            "text": "Compare Scenarios", 
            "title": "Compare Scenarios"
        }, 
        {
            "location": "/Getting_started/CompareScenarios/#compare-scenarios", 
            "text": "", 
            "title": "Compare Scenarios"
        }, 
        {
            "location": "/Getting_started/Best_practices/", 
            "text": "", 
            "title": "Best Practices"
        }, 
        {
            "location": "/Getting_started/controlled_vocabularies/", 
            "text": "WaMDaM Controlled Vocabularies\n\n\nCheck out the \nWaMDaM online moderated registry\n that is used to promote consistent terminology (i.e., Controlled Vocabularies-(CVs)) to describe water system components and their attributes across datasets, models, and users, while still retaining the native terms.  \n\n\nRegistering your model's native terms against these CVs will allow you to relate, query, and compare all of your water management data within a single database.", 
            "title": "Controlled Vocabulary"
        }, 
        {
            "location": "/Getting_started/controlled_vocabularies/#wamdam-controlled-vocabularies", 
            "text": "Check out the  WaMDaM online moderated registry  that is used to promote consistent terminology (i.e., Controlled Vocabularies-(CVs)) to describe water system components and their attributes across datasets, models, and users, while still retaining the native terms.    Registering your model's native terms against these CVs will allow you to relate, query, and compare all of your water management data within a single database.", 
            "title": "WaMDaM Controlled Vocabularies"
        }, 
        {
            "location": "/UseCases/Application/", 
            "text": "Data Sources\n\n\nDemonstrate how WaMDaM enables systematic data query and comparisons across multiple different models and datasets. \n\n\n\n\nFigure 1:\n Flowchart of the steps that users follow to use WaMDaM   \n\n\nApplication: The Bear River Watershed, Utah\n\n\nWe demonstrate the WaMDaM design and use cases using twelve data sources and models in the Bear River Watershed which spans three states, Utah, Idaho, and Wyoming. The Watershed covers an area 3,300 square miles (8,547 square kilometers) and it is the largest source of water to the Great Salt Lake in Utah.     \n\n\nThe Watershed is an interesting one because it has various unique and overlapping available data provided by the three states, the Bear River Commission, national US datasets, and three existing systems models: BRSDM which allocates water based on priority for the upper Bear River Basin, a WEAP model which allocate water on priority, and a WASH model which allocates water to maximum suitable habitat areas in the Lower Bear River.   \n\n\nNote that when developers organize their model\u2019s input data into WaMDaM, models become a new source of data. We select a few locations in the Watershed to demonstrate use cases as each location has data from multiple sources: Stewart Dam site in Idaho, Hyrum Reservoir, Bear River Migratory Bird Refuge, and Cache County in Utah which is a major water use area in the Bear River Watershed.   \n\n\n \n\nFigure 2\n: The Bear River Watershed in the Western US and example available data sources used to demonstrate WaMDaM. Use cases are for the entire watershed, Lower Bear, Cache County. Large stars from top to bottom are for sites referred to in use cases: Stewart Dam site, Hyrum Reservoir, and the Bear River Migratory Bird Refuge. \n\n\nUsed datasets\n\n\nWe loaded twelve different and models into a single WaMDaM database SQLite file. The datasets cover natural and built water supply and demand, infrastructure connectivity, with different data types, networks and scenarios that cover the WaMDaM capabilities. \nEach of the \ndatasets on GitHub\n below is prepared and copied into a WaMDaM Excel workbook. Then we loaded all of them one-at-a-time inton a single SQLite database file.\n\n\n\nTable 1: Summary of example water management datasets used to demonstrate use cases to organize and compare heterogeneous and disparate data sources using WaMDaM \n\n\nDownload the SQLite file and SQLite Manager\n\n\nFollow the \nsteps\n here to use to execute the use cases next\n\n\nUse Cases in the Bear River Watershed, Utah\n\n\nThe following presented use cases help users identify and compare two fundamental aspects of water management data: data values with different types and connectivity of scenarios and networks.  \n\n\nUse case 1\n:\n identify data availability for attributes needed by a model in a study area. \nWhat attributes that have available data to develop a WEAP and WASH models in the Upper Bear River watershed?\n\n\nUse case 2\n:\n identify and compare time series and seasonal discharge data across data sources. \nWhat is the discharge at the node \u201cbelow Stewart Dam\u201d in Idaho?\n\n\nUse case 3\n:\n identify and compare demand data for a site as reported in many sources.\nWhat is the total agriculture water use or demand in Cache Valley, Utah?\n\n\nUse case 4\n:\n identify and compare infrastructure data across many data sources. \nWhat is the volume, purpose, evaporation, and elevation of Hyrum Reservoir Utah?\n\n\nUse case 5\n:\n identify inflow and outflow into and out of a node water system component and compare them across data sources or models.\nWhat is the inflow and outflow of Hyrum Reservoir, Utah? \n\n\nUse case 6\n:\n compare differences in network topology and data values between two model scenarios.\nWhat is the difference in input data between the two scenarios or the Bear River WEAP model?", 
            "title": "Application"
        }, 
        {
            "location": "/UseCases/Application/#data-sources", 
            "text": "Demonstrate how WaMDaM enables systematic data query and comparisons across multiple different models and datasets.    Figure 1:  Flowchart of the steps that users follow to use WaMDaM", 
            "title": "Data Sources"
        }, 
        {
            "location": "/UseCases/Application/#application-the-bear-river-watershed-utah", 
            "text": "We demonstrate the WaMDaM design and use cases using twelve data sources and models in the Bear River Watershed which spans three states, Utah, Idaho, and Wyoming. The Watershed covers an area 3,300 square miles (8,547 square kilometers) and it is the largest source of water to the Great Salt Lake in Utah.       The Watershed is an interesting one because it has various unique and overlapping available data provided by the three states, the Bear River Commission, national US datasets, and three existing systems models: BRSDM which allocates water based on priority for the upper Bear River Basin, a WEAP model which allocate water on priority, and a WASH model which allocates water to maximum suitable habitat areas in the Lower Bear River.     Note that when developers organize their model\u2019s input data into WaMDaM, models become a new source of data. We select a few locations in the Watershed to demonstrate use cases as each location has data from multiple sources: Stewart Dam site in Idaho, Hyrum Reservoir, Bear River Migratory Bird Refuge, and Cache County in Utah which is a major water use area in the Bear River Watershed.       Figure 2 : The Bear River Watershed in the Western US and example available data sources used to demonstrate WaMDaM. Use cases are for the entire watershed, Lower Bear, Cache County. Large stars from top to bottom are for sites referred to in use cases: Stewart Dam site, Hyrum Reservoir, and the Bear River Migratory Bird Refuge.", 
            "title": "Application: The Bear River Watershed, Utah"
        }, 
        {
            "location": "/UseCases/Application/#used-datasets", 
            "text": "We loaded twelve different and models into a single WaMDaM database SQLite file. The datasets cover natural and built water supply and demand, infrastructure connectivity, with different data types, networks and scenarios that cover the WaMDaM capabilities. \nEach of the  datasets on GitHub  below is prepared and copied into a WaMDaM Excel workbook. Then we loaded all of them one-at-a-time inton a single SQLite database file.  \nTable 1: Summary of example water management datasets used to demonstrate use cases to organize and compare heterogeneous and disparate data sources using WaMDaM", 
            "title": "Used datasets"
        }, 
        {
            "location": "/UseCases/Application/#download-the-sqlite-file-and-sqlite-manager", 
            "text": "Follow the  steps  here to use to execute the use cases next", 
            "title": "Download the SQLite file and SQLite Manager"
        }, 
        {
            "location": "/UseCases/Application/#use-cases-in-the-bear-river-watershed-utah", 
            "text": "The following presented use cases help users identify and compare two fundamental aspects of water management data: data values with different types and connectivity of scenarios and networks.    Use case 1 :  identify data availability for attributes needed by a model in a study area. \nWhat attributes that have available data to develop a WEAP and WASH models in the Upper Bear River watershed?  Use case 2 :  identify and compare time series and seasonal discharge data across data sources. \nWhat is the discharge at the node \u201cbelow Stewart Dam\u201d in Idaho?  Use case 3 :  identify and compare demand data for a site as reported in many sources.\nWhat is the total agriculture water use or demand in Cache Valley, Utah?  Use case 4 :  identify and compare infrastructure data across many data sources. \nWhat is the volume, purpose, evaporation, and elevation of Hyrum Reservoir Utah?  Use case 5 :  identify inflow and outflow into and out of a node water system component and compare them across data sources or models.\nWhat is the inflow and outflow of Hyrum Reservoir, Utah?   Use case 6 :  compare differences in network topology and data values between two model scenarios.\nWhat is the difference in input data between the two scenarios or the Bear River WEAP model?", 
            "title": "Use Cases in the Bear River Watershed, Utah"
        }, 
        {
            "location": "/UseCases/Download/", 
            "text": "Download\n\n\nSteps to use the populated SQLite file\n\n\n\n\n\n\nDownload the \nSQLite database file\n {40 MB}\n\n\n\n\n\n\nUse the SQLite Manager Add-on to Mozilla Firefox to query the database. \n\n\n\n\n\n\nDownload Mozilla Firefox web browser \nversion 56\n or older. \n\n  The new Version 57(Firefox Quantum) does not yet support SQLite Manager.  \n\n\n\n\n\n\nUsing Firefox, install \nSQLit Manager Add-on\n. Follow the screenshots below \n\n\n\n\n\n\nNow you're ready to execute the SQL script for each use cases\n\n\n\n\n\n\n\n\n\n\nInstall SQLite Manager Add-on to Mozilla Firefox\n\nhttps://addons.mozilla.org/en-US/firefox/addon/sqlite-manager/\n  \n\n\n   \n\n\n\n\n\n\nCustomize SQLite Manager button to Firefox   \n\n\n   \n\n\n\n\n\n\nAdd SQLite Manager button to Firefox  \n\n\n   \n\n\n\n\n\n\nLaunch SQLite Manager  \n\n\n   \n\n\n\n\n\n\nConnect to a WaMDaM database\n\n   \n\n\n\n\n\n\nExecute and customize SQL queries against the WaMDaM database for use cases", 
            "title": "Download"
        }, 
        {
            "location": "/UseCases/Download/#download", 
            "text": "", 
            "title": "Download"
        }, 
        {
            "location": "/UseCases/Download/#steps-to-use-the-populated-sqlite-file", 
            "text": "Download the  SQLite database file  {40 MB}    Use the SQLite Manager Add-on to Mozilla Firefox to query the database.     Download Mozilla Firefox web browser  version 56  or older.  \n  The new Version 57(Firefox Quantum) does not yet support SQLite Manager.      Using Firefox, install  SQLit Manager Add-on . Follow the screenshots below     Now you're ready to execute the SQL script for each use cases      Install SQLite Manager Add-on to Mozilla Firefox https://addons.mozilla.org/en-US/firefox/addon/sqlite-manager/            Customize SQLite Manager button to Firefox            Add SQLite Manager button to Firefox           Launch SQLite Manager           Connect to a WaMDaM database        Execute and customize SQL queries against the WaMDaM database for use cases", 
            "title": "Steps to use the populated SQLite file"
        }, 
        {
            "location": "/usecases/use_case_1/", 
            "text": "Use case 1\n\n\nIdentify data availability for attributes needed by a model in a study area\n   \n\n\nExample\n \n\nWhat attributes that have available data to develop a WEAP and WASH models in the Upper Bear River watershed?   \n\n\nProblem\n\n\nIn existing practices, identifying what input data is available and where it can be found for each model if often laborious and time-consuming effort.\n\n\nSolution\n\n\nThis use case more readily identifies available data in WaMDaM to expand an existing WEAP and WASH models in the Lower Bear River Watershed Utah to the entire basin. First of all, the script identifies the WEAP object types that have equivalent attributes and instances with data values in the study area. Controlled vocabulary helps relating terms of models and datasets. For example, a \u201cReservoir\u201d Object Type in WEAP as registered with the controlled term \u201cReservoir\u201d. \u201cDam\u201d in both the US Dams and Utah Dams datasets were registered with \u201cReservoir\u201d controlled term. \u201cReservoir Node\u201d was registered with \u201cReservoir\u201d controlled term (Figure 1). \n\n\n\nFigure 1: Example conceptual mapping showing how the use of controlled vocabulary can help retrieve different available native attributes in datasets for reservoirs in the WEAP model instance. \n\n\nHere, using the \u201cReservoir\u201d controlled term returns all the local native terms \u201cDam\u201d, Reservoir\u201d and \u201cReservoir Node.\u201d Similarly, for the controlled attribute \u201cVolume\u201d which returns Max_STOR, STORG_ACFT, Capacity, and Max Storage Capacity. Native terms that are not registered with controlled vocabulary would not be returned. Users may still query native terms if they know and provide them in a separate request. \n\n\nWEAP Model\n   \n\n\n\n\n\n\n\n\nQuestion\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nIdentify model data requirements\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhich attributes have available data\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhere the data is available in datasets\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhat additional data are needed\n\n\nscript\n\n\nResult\n\n\n\n\n\n\n\n\nWASH Model\n  \n\n\n\n\n\n\n\n\nQuestion\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nIdentify model data requirements\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhich attributes have available data\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhere the data is available in datasets\n\n\nscript\n\n\nResult\n\n\n\n\n\n\nWhat additional data are needed\n\n\nscript\n\n\nResult\n\n\n\n\n\n\n\n\nUsers can filter the search based on attribute or object categories, either native or controlled attributes or object types. Users then will look for an additional data sources to that might have these data and load them into WaMDaM. WaMDaM database only found six attributes with available data for WASH because the WASH model uses many specific equation indices that do not have data among the datasets loading into WaMDaM. Object Types with instances that do not have coordinates are excluded from the search and do not return attributes. In the second part of the use case, it specifies the WEAP or WASH object types and attributes that are needed for them but do not have data values in WaMDaM. \n\n\n\n\nThis use case demonstrates how WaMDaM provides a more readily automated and consistent method to identify available (or unavailable) data in multiple datasets that are required by models in a study area. Note that the value of data in WaMDaM increases as far as identifying it for other models, as users add coordinates and register it with controlled vocabulary.  \n\n\nNext\n\n\nThis first step searched for input data to models. Next, users can further query specific nodes and attributes like streamflow, demand, reservoir storage, natural and built infrastructure connectivity with the reservoir and prepare it as input to their model as shown in the next use cases", 
            "title": "Use case 1"
        }, 
        {
            "location": "/usecases/use_case_1/#use-case-1", 
            "text": "Identify data availability for attributes needed by a model in a study area      Example   \nWhat attributes that have available data to develop a WEAP and WASH models in the Upper Bear River watershed?", 
            "title": "Use case 1"
        }, 
        {
            "location": "/usecases/use_case_1/#problem", 
            "text": "In existing practices, identifying what input data is available and where it can be found for each model if often laborious and time-consuming effort.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_1/#solution", 
            "text": "This use case more readily identifies available data in WaMDaM to expand an existing WEAP and WASH models in the Lower Bear River Watershed Utah to the entire basin. First of all, the script identifies the WEAP object types that have equivalent attributes and instances with data values in the study area. Controlled vocabulary helps relating terms of models and datasets. For example, a \u201cReservoir\u201d Object Type in WEAP as registered with the controlled term \u201cReservoir\u201d. \u201cDam\u201d in both the US Dams and Utah Dams datasets were registered with \u201cReservoir\u201d controlled term. \u201cReservoir Node\u201d was registered with \u201cReservoir\u201d controlled term (Figure 1).   \nFigure 1: Example conceptual mapping showing how the use of controlled vocabulary can help retrieve different available native attributes in datasets for reservoirs in the WEAP model instance.   Here, using the \u201cReservoir\u201d controlled term returns all the local native terms \u201cDam\u201d, Reservoir\u201d and \u201cReservoir Node.\u201d Similarly, for the controlled attribute \u201cVolume\u201d which returns Max_STOR, STORG_ACFT, Capacity, and Max Storage Capacity. Native terms that are not registered with controlled vocabulary would not be returned. Users may still query native terms if they know and provide them in a separate request.   WEAP Model         Question  Query  Result      Identify model data requirements  script  Result    Which attributes have available data  script  Result    Where the data is available in datasets  script  Result    What additional data are needed  script  Result     WASH Model        Question  Query  Result      Identify model data requirements  script  Result    Which attributes have available data  script  Result    Where the data is available in datasets  script  Result    What additional data are needed  script  Result     Users can filter the search based on attribute or object categories, either native or controlled attributes or object types. Users then will look for an additional data sources to that might have these data and load them into WaMDaM. WaMDaM database only found six attributes with available data for WASH because the WASH model uses many specific equation indices that do not have data among the datasets loading into WaMDaM. Object Types with instances that do not have coordinates are excluded from the search and do not return attributes. In the second part of the use case, it specifies the WEAP or WASH object types and attributes that are needed for them but do not have data values in WaMDaM.    This use case demonstrates how WaMDaM provides a more readily automated and consistent method to identify available (or unavailable) data in multiple datasets that are required by models in a study area. Note that the value of data in WaMDaM increases as far as identifying it for other models, as users add coordinates and register it with controlled vocabulary.", 
            "title": "Solution"
        }, 
        {
            "location": "/usecases/use_case_1/#next", 
            "text": "This first step searched for input data to models. Next, users can further query specific nodes and attributes like streamflow, demand, reservoir storage, natural and built infrastructure connectivity with the reservoir and prepare it as input to their model as shown in the next use cases", 
            "title": "Next"
        }, 
        {
            "location": "/usecases/use_case_2/", 
            "text": "Use case 2\n\n\nIdentify and compare time series and seasonal discharge data across data sources\n \n\n\nExample\n \n\nWhat is the discharge at the node \u201cbelow Stewart Dam\u201d in Idaho?   \n\n\nProblem\n\n\nWater supply data for systems models whether in streams or storage systems are often organized in separate and different files and require specific methods to identify and relate similar ones. \n\n\nSolution\n\n\nIn this example, we identify discharge data \u201cbelow Stewart Dam\u201d in Idaho which marks the legal beginning of the Lower Bear River Division according to the Bear River Compact and has data from many sources (Bear River Commission, 1980). Here we use the controlled node instance name of \u201cUSGS 10046500 BEAR RIVER BL STEWART DAM NR MONTPELIER, ID\u201d and the controlled attribute name of \u201cFlow\u201d to identify all data that exist for it in the WaMDaM database. The query returns time series and seasonal data types from five different datasets which all loaded in WaMDaM database earlier. They are reported by the states of Idaho, Utah, USGS, Bear River Commission, and the Bear River Systems Dynamics model. Each data source has its own native term for the node instance and the attribute (Table C in the Appendix).   \n\n\nWe first discuss the time series data then we compare how well the seasonal monthly data represent flows in the site. For time series, the datasets have different aggregation statistics (e.g., cumulative monthly, average monthly or daily) and intervals and time extent. They also come in calendar and water year types. Besides the different native terms, some of them use terms that have different conceptual meaning like using the \u201cStorage/delivered volume\u201d in the Utah to describe the discharge. The Bear River commission only reports data from Mid-April to end of September. So April is excluded here to compare full month values.    \n\n\nMany of these important properties of each time series were not reported along with data values except the USGS dataset. Learning about and reporting them into WaMDaM was a laborious task that involved emailing and calling the potentially in-charge people about the metadata. Now, we use SQL to aggregate and convert all the time series data with some overlap given their different unit, year type, and aggregation statistic and aggregation interval unit (Figure 6-A). Users typically have to do these data manipulations for each study area. When they use WaMDaM, they now can reuse them for many sources. Here, the data from multiple sources complement each other, the Utah Division of Water Resources (UDWR) has the longest record and continues with other sources after the USGS sites ends in 1993. From personal communications with the Idaho Department of Water Resources, we learned that the PacifiCorp power company took over the Stewart gage after the USGS discontinued it. PacifiCorp sends the data to the Bear River Commission, Utah, and Idaho. The UDWR mentioned that the PacifiCorp measured flow before the USGS.   \n\n\nMany of these important properties of each time series were not reported along with data values except the USGS dataset. Learning about and reporting them into WaMDaM was a laborious task that involved emailing and calling the potentially in-charge people about the metadata. Now, we use SQL to aggregate and convert all the time series data with some overlap given their different unit, year type, and aggregation statistic and aggregation interval unit (Figure 6-A). Users typically have to do these data manipulations for each study area. When they use WaMDaM, they now can reuse them for many sources. Here, the data from multiple sources complement each other, the Utah Division of Water Resources (UDWR) has the longest record and continues with other sources after the USGS sites ends in 1993. From personal communications with the Idaho Department of Water Resources, we learned that the PacifiCorp power company took over the Stewart gage after the USGS discontinued it. PacifiCorp sends the data to the Bear River Commission, Utah, and Idaho. The UDWR mentioned that the PacifiCorp measured flow before the USGS.   \n\n\nGiven the similarities, differences, and overlap in data as in Figure 6, a simple question here is which dataset to use as an input for water supply in a potential model. Here we discuss the differences among the datasets and offer a potential suggestion on which one to use. First, the years between 1942 and 1993 are overlapped and reported data average monthly data for the USGS and UDWR datasets. Both of them found to have the same average and standard deviation to one decimal point of 1035.8 and 2927.8 acre-feet of cumulative acre-feet per month. Note that the UDWR is orginally reported as monthly acre-feet where the USGS is reported as daily cfs. Given the accurcy of the UDWR data in comparion with the USGS in the overlappped period, we are confendent to use the UDWR for the period prior the USGS recored back to 1920.    \n\n\nOn the other hand, there are three datasets with time series data for the period after 1993 when the USGS period ends. The three overlapping data sources seems to report the same values until their end in 2015 except the descrepency in the years 1996-1997 (Figure 1-B). Our contact at the UDWR mentioned that they use correlation where data did not exist and they are aware of some resonlable discrepancy. Our contact at the IDWR mentioned that their daily data values between October 1995 and April 1996 seemed to be in interpolated. It is unlcear what happen that year and why that is the case but the expert suggested flagging the data for potneial errors. She also suggested that small discrepancies between the three data sourcs are likely differences between preliminary and final gage data from PacifiCorp. She also pointed out that the Idaho dataset is a part of the water rights accounting program and is a tool used to help watermasters regulate the river in priority according to the water rights. She mentioned that because irrigation regulation doe not occur in that October to April time frame, it appears that the winter data was not necessarily reviewed properly. Note that out contact was not working at the IDWR during that time period. This example data descripnacy issue underscores the importance of contexual metadata that can be used to interpret data values over time. We suggest using the UDWR dataset given the confidence in its accuracy previously with the USGS dataset. The integration of the four datasets in WaMDaM is proved valuable to compare them and make an informed decision on which one to use as input to a model.    \n\n\nScripts\n\n\n\n\n\n\n\n\nUse Case\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nIdentify TimeSeries Seasonal Dual data\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nIdentify aggregate TimeSeries Values\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nIdentify Seasonal Values\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\n\n\nPython 2.7 script to plot figures of use case\n\nTo run the Python script, you need to be connected to the internet. The script reads its data from the csv files hosted on GitHub.\n\n\n\n\n\n\n\n\nUse Case figure\n\n\nPython Script\n\n\nInteractive figure\n\n\n\n\n\n\n\n\n\n\nFigure a\n\n\nscript\n\n\nFigure\n\n\n\n\n\n\nFigure b\n\n\nscript\n\n\nFigure\n\n\n\n\n\n\n\n\n \nFigure 1: [A] Compiled time series data of flow at Below Stewart Dam site in Idaho as reported by four different agencies at overlapping times. [B] A snapshot of [A] that shows the similarity and discrepancy among three sources later 1994 to 2000. \n\n\nFor seasonal data, the BRSDM model used three scenarios for monthly flow (dry, normal, and wet) for the same site (Figure 7-A). Most of the months across the three scenarios have largely similar values except June and July as they represent the peak flow. We offer this simple comparison example that intends to improve how the BRSDM model could represent monthly peak flows given the extended flow recorded that possibly was not available to the model developers at the time. We compare how likely the dry and wet flow threshold for June as defined in the seasonal parameter to be exceeded with drier or wetter years based on the 92 years of record flow data in the UDWR dataset that spans 1923 to 2015. Using the cumulative distribution function for the flow data in June, there is 48% chance the flow will be lower than \u201cdry\u201d year threshold of 666 acre-ft per month with a magnitude down to 10 times lower than this max value (in June 1977 of 62 acre-ft per month). There also 3% chance the flow will be higher than the \u201cwet\u201d threshold of 17,181 acre-ft per month with a magnitude up to 7 times this max value (June 1923 of 117,000 acre-ft per month) (Figure 2-B). We recognize that a different value or range of the threshold could be used to define what is dry or wet for comparisons. However, we just use the simple one above as an example of the type of comparisons that are enabled as many of both time series and seasonal data types are organized in WaMDaM. We note that the method to assign the seasonal monthly values for each scenarios was not documented in the model.   \n\n\nHere we suggest three potential ways to improve the values of seasonal model that consider the above identified exceedance likelihood. First, keep it as is but report the percentile values as a limitation to it and the likely of exceeding it as dryer or wetter years to better inform the model results. Second, change the average dry, normal, wet values based on selected consistent percentiles. For example, select 10 percentile of dry, 50 percentile for normal, and 90 percentile for wet year. Third, add extreme condition scenarios like extreme dry of 1 percentile and extreme wet of 99 percentile. This comparison is just a one potential example that is enabled by organizing and then identifying both seasonal and time series data using one consistent method.\n\n\nPython 2.7 script to plot figures of use case\n \n\nTo run the Python script, you need to be connected to the internet. The script reads its data from the csv files hosted on GitHub.  \n\n\n\n\n\n\n\n\nUse Case figure\n\n\nPython Script\n\n\nInteractive figure\n\n\n\n\n\n\n\n\n\n\nFigure A\n\n\nscript\n\n\nFigure A\n\n\n\n\n\n\nFigure B\n\n\nscript\n\n\nFigure B\n\n\n\n\n\n\n\n\n \nFigure 2: [A] Seasonal of average monthly flow data at Below Stewart Dam site (same site in Figure 6). Each month here applies to a wet, normal, and dry year categories irrespective of which calendar year. [B] A cumulative distribution of the all June flow data in the Utah UDWR dataset to evaluate how well the dry and wet years represent the historic record peak flows.  \n\n\nExisting time series data management methods like the Observation Data Model can already organize the different time series data used here. WaMDaM here can organize and compare this time series data long with other types used in water management especially seasonal data. Documenting how seasonal data is derived through metadata is a practice that WaMDaM is designed to support. One additional aspect of WaMDaM that users could benefit from is the use of Boolean values that indicate binary or dual state of node or link instance. For example, searching for the \u201cstatus\u201d controlled attribute at the same site returns that this site as in the Idaho Dataset is reported as \u201cactive\u201d or \u201cinactive\u201d in the USGS dataset.    \n\n\nWith this example to choose a controlled term for the instance name, we recognize that defining a specific and descriptive node or link instance name in a watershed, national, or worldwide could be challenging. This is because of the large number of infrastructure instances that could reach thousands or even millions. So there is a need for a robust method to name and organize a potentially growing controlled instance names. The method could benefit from the USGS convention of naming their gage stations that include the institution, site code, name and nearby town or and state. \n\n\nNext\n\n\nThis use case demonstrated organizing water supply data, the next use case demonstrates organizing and comparing water demand data from multiple sources.", 
            "title": "Use case 2"
        }, 
        {
            "location": "/usecases/use_case_2/#use-case-2", 
            "text": "Identify and compare time series and seasonal discharge data across data sources    Example   \nWhat is the discharge at the node \u201cbelow Stewart Dam\u201d in Idaho?", 
            "title": "Use case 2"
        }, 
        {
            "location": "/usecases/use_case_2/#problem", 
            "text": "Water supply data for systems models whether in streams or storage systems are often organized in separate and different files and require specific methods to identify and relate similar ones.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_2/#solution", 
            "text": "In this example, we identify discharge data \u201cbelow Stewart Dam\u201d in Idaho which marks the legal beginning of the Lower Bear River Division according to the Bear River Compact and has data from many sources (Bear River Commission, 1980). Here we use the controlled node instance name of \u201cUSGS 10046500 BEAR RIVER BL STEWART DAM NR MONTPELIER, ID\u201d and the controlled attribute name of \u201cFlow\u201d to identify all data that exist for it in the WaMDaM database. The query returns time series and seasonal data types from five different datasets which all loaded in WaMDaM database earlier. They are reported by the states of Idaho, Utah, USGS, Bear River Commission, and the Bear River Systems Dynamics model. Each data source has its own native term for the node instance and the attribute (Table C in the Appendix).     We first discuss the time series data then we compare how well the seasonal monthly data represent flows in the site. For time series, the datasets have different aggregation statistics (e.g., cumulative monthly, average monthly or daily) and intervals and time extent. They also come in calendar and water year types. Besides the different native terms, some of them use terms that have different conceptual meaning like using the \u201cStorage/delivered volume\u201d in the Utah to describe the discharge. The Bear River commission only reports data from Mid-April to end of September. So April is excluded here to compare full month values.      Many of these important properties of each time series were not reported along with data values except the USGS dataset. Learning about and reporting them into WaMDaM was a laborious task that involved emailing and calling the potentially in-charge people about the metadata. Now, we use SQL to aggregate and convert all the time series data with some overlap given their different unit, year type, and aggregation statistic and aggregation interval unit (Figure 6-A). Users typically have to do these data manipulations for each study area. When they use WaMDaM, they now can reuse them for many sources. Here, the data from multiple sources complement each other, the Utah Division of Water Resources (UDWR) has the longest record and continues with other sources after the USGS sites ends in 1993. From personal communications with the Idaho Department of Water Resources, we learned that the PacifiCorp power company took over the Stewart gage after the USGS discontinued it. PacifiCorp sends the data to the Bear River Commission, Utah, and Idaho. The UDWR mentioned that the PacifiCorp measured flow before the USGS.     Many of these important properties of each time series were not reported along with data values except the USGS dataset. Learning about and reporting them into WaMDaM was a laborious task that involved emailing and calling the potentially in-charge people about the metadata. Now, we use SQL to aggregate and convert all the time series data with some overlap given their different unit, year type, and aggregation statistic and aggregation interval unit (Figure 6-A). Users typically have to do these data manipulations for each study area. When they use WaMDaM, they now can reuse them for many sources. Here, the data from multiple sources complement each other, the Utah Division of Water Resources (UDWR) has the longest record and continues with other sources after the USGS sites ends in 1993. From personal communications with the Idaho Department of Water Resources, we learned that the PacifiCorp power company took over the Stewart gage after the USGS discontinued it. PacifiCorp sends the data to the Bear River Commission, Utah, and Idaho. The UDWR mentioned that the PacifiCorp measured flow before the USGS.     Given the similarities, differences, and overlap in data as in Figure 6, a simple question here is which dataset to use as an input for water supply in a potential model. Here we discuss the differences among the datasets and offer a potential suggestion on which one to use. First, the years between 1942 and 1993 are overlapped and reported data average monthly data for the USGS and UDWR datasets. Both of them found to have the same average and standard deviation to one decimal point of 1035.8 and 2927.8 acre-feet of cumulative acre-feet per month. Note that the UDWR is orginally reported as monthly acre-feet where the USGS is reported as daily cfs. Given the accurcy of the UDWR data in comparion with the USGS in the overlappped period, we are confendent to use the UDWR for the period prior the USGS recored back to 1920.      On the other hand, there are three datasets with time series data for the period after 1993 when the USGS period ends. The three overlapping data sources seems to report the same values until their end in 2015 except the descrepency in the years 1996-1997 (Figure 1-B). Our contact at the UDWR mentioned that they use correlation where data did not exist and they are aware of some resonlable discrepancy. Our contact at the IDWR mentioned that their daily data values between October 1995 and April 1996 seemed to be in interpolated. It is unlcear what happen that year and why that is the case but the expert suggested flagging the data for potneial errors. She also suggested that small discrepancies between the three data sourcs are likely differences between preliminary and final gage data from PacifiCorp. She also pointed out that the Idaho dataset is a part of the water rights accounting program and is a tool used to help watermasters regulate the river in priority according to the water rights. She mentioned that because irrigation regulation doe not occur in that October to April time frame, it appears that the winter data was not necessarily reviewed properly. Note that out contact was not working at the IDWR during that time period. This example data descripnacy issue underscores the importance of contexual metadata that can be used to interpret data values over time. We suggest using the UDWR dataset given the confidence in its accuracy previously with the USGS dataset. The integration of the four datasets in WaMDaM is proved valuable to compare them and make an informed decision on which one to use as input to a model.", 
            "title": "Solution"
        }, 
        {
            "location": "/usecases/use_case_2/#scripts", 
            "text": "Use Case  Query  Result      Identify TimeSeries Seasonal Dual data  Query  Result  csv    Identify aggregate TimeSeries Values  Query  Result  csv    Identify Seasonal Values  Query  Result  csv     Python 2.7 script to plot figures of use case \nTo run the Python script, you need to be connected to the internet. The script reads its data from the csv files hosted on GitHub.     Use Case figure  Python Script  Interactive figure      Figure a  script  Figure    Figure b  script  Figure      \nFigure 1: [A] Compiled time series data of flow at Below Stewart Dam site in Idaho as reported by four different agencies at overlapping times. [B] A snapshot of [A] that shows the similarity and discrepancy among three sources later 1994 to 2000.   For seasonal data, the BRSDM model used three scenarios for monthly flow (dry, normal, and wet) for the same site (Figure 7-A). Most of the months across the three scenarios have largely similar values except June and July as they represent the peak flow. We offer this simple comparison example that intends to improve how the BRSDM model could represent monthly peak flows given the extended flow recorded that possibly was not available to the model developers at the time. We compare how likely the dry and wet flow threshold for June as defined in the seasonal parameter to be exceeded with drier or wetter years based on the 92 years of record flow data in the UDWR dataset that spans 1923 to 2015. Using the cumulative distribution function for the flow data in June, there is 48% chance the flow will be lower than \u201cdry\u201d year threshold of 666 acre-ft per month with a magnitude down to 10 times lower than this max value (in June 1977 of 62 acre-ft per month). There also 3% chance the flow will be higher than the \u201cwet\u201d threshold of 17,181 acre-ft per month with a magnitude up to 7 times this max value (June 1923 of 117,000 acre-ft per month) (Figure 2-B). We recognize that a different value or range of the threshold could be used to define what is dry or wet for comparisons. However, we just use the simple one above as an example of the type of comparisons that are enabled as many of both time series and seasonal data types are organized in WaMDaM. We note that the method to assign the seasonal monthly values for each scenarios was not documented in the model.     Here we suggest three potential ways to improve the values of seasonal model that consider the above identified exceedance likelihood. First, keep it as is but report the percentile values as a limitation to it and the likely of exceeding it as dryer or wetter years to better inform the model results. Second, change the average dry, normal, wet values based on selected consistent percentiles. For example, select 10 percentile of dry, 50 percentile for normal, and 90 percentile for wet year. Third, add extreme condition scenarios like extreme dry of 1 percentile and extreme wet of 99 percentile. This comparison is just a one potential example that is enabled by organizing and then identifying both seasonal and time series data using one consistent method.  Python 2.7 script to plot figures of use case   \nTo run the Python script, you need to be connected to the internet. The script reads its data from the csv files hosted on GitHub.       Use Case figure  Python Script  Interactive figure      Figure A  script  Figure A    Figure B  script  Figure B      \nFigure 2: [A] Seasonal of average monthly flow data at Below Stewart Dam site (same site in Figure 6). Each month here applies to a wet, normal, and dry year categories irrespective of which calendar year. [B] A cumulative distribution of the all June flow data in the Utah UDWR dataset to evaluate how well the dry and wet years represent the historic record peak flows.    Existing time series data management methods like the Observation Data Model can already organize the different time series data used here. WaMDaM here can organize and compare this time series data long with other types used in water management especially seasonal data. Documenting how seasonal data is derived through metadata is a practice that WaMDaM is designed to support. One additional aspect of WaMDaM that users could benefit from is the use of Boolean values that indicate binary or dual state of node or link instance. For example, searching for the \u201cstatus\u201d controlled attribute at the same site returns that this site as in the Idaho Dataset is reported as \u201cactive\u201d or \u201cinactive\u201d in the USGS dataset.      With this example to choose a controlled term for the instance name, we recognize that defining a specific and descriptive node or link instance name in a watershed, national, or worldwide could be challenging. This is because of the large number of infrastructure instances that could reach thousands or even millions. So there is a need for a robust method to name and organize a potentially growing controlled instance names. The method could benefit from the USGS convention of naming their gage stations that include the institution, site code, name and nearby town or and state.", 
            "title": "Scripts"
        }, 
        {
            "location": "/usecases/use_case_2/#next", 
            "text": "This use case demonstrated organizing water supply data, the next use case demonstrates organizing and comparing water demand data from multiple sources.", 
            "title": "Next"
        }, 
        {
            "location": "/usecases/use_case_3/", 
            "text": "Use case 3\n\n\nIdentify and compare demand data for a site as reported in many sources\n   \n\n\nExample\n \nWhat is the total agriculture water use or demand in Cache County, Utah?   \n\n\nProblem\n\n\nIdentifying water use and demand data is probably the most difficult task in populating models with data. Likely in part because the source of data is specific to each study area compared to water supply data that are often available from national or regional sources like USGS and BOR. In Appendix B, we identify nine issues that users need to consider while working with and importing demand data into WaMDaM. They provide a better context to the results of the use case.  \n\n\nSolution\n\n\nIn the use case query, we aggregated and converted demand values to answer the use case question of how much water demand for agriculture in a geo-spatial boundary for Cache County in Utah, controlled attribute name \u201cflow\u201d, and instance category of \u201cAgriculture\u201d. We aggregated the data within the county for each data source and converted the units to acre-feet (Figure 8). The Figure shows data from four different sources: WEAP and WASH models, and the Water Data Exchange database (WaDE) by the Western States Water Council (\nhttp://www.westernstateswater.org/wade/\n). The comparison here intends to show how WaMDaM enables querying all of them together and what each data source has data for. Users then can make an informed decision to choose the aggregation level or site specific demand data to their own model. Users also could possibly incorporate the total values for two equivalent estimates (two top curves) to test a model sensitivity to different demands.   \n\n\nWe note that the number of available demand sites within the area is not necessarily an indicator of the demand volume per year but here it may indicate whether the reported value is aggregated from many or comes from one site. In Figure 8, one comparison point is that three models often represent demand as constant through years while the WaDE as new data source, can improve these models by considering variable demand. A second point is that data sources either have data for all the country area like in the WEAP Model 2017 and WaDE. Or they may cover part of the area like in the WASH and WEAP 2010 models based on the locations of the sites in the County compared to the WEAP 2017 model. The first two top curves in Figure 7 are comparable to each other as they cover the whole county in Utah and they have attributes of diverted or delivered water compared to consumptive water as in the third curve (from top) for WaDE. Obviously, the low values of the bottom two curves indicate that both WASH and WEAP 2010 models represent part of Cache County\u2019s demand as their study area and sites do not include all the county.  \n\n\nTable 1: Key different conceptual terms for demand available in models and data sources\n\n \n\n\nAll these differences are context specific and require knowledge of them before making comparisons which still make it challenging to correctly interpret data values and compare them. WaMDaM begins to enable such comparisons by organizing all the data sources into one database with mapping of terms through controlled vocabulary. We do not foresee WaMDaM to fully automate how the data is aggregated or grouped in this use case or others. There could be assumptions embedded in how the data is represented and grouped. WaMDaM however documents metadata which could help users more accurately interpret data values. \n\n\n\n\n\n\n\n\nUse Case\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nIdentifyDemandSites\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nIdentify Demand Sites Seasonal Values\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nIdentify DemandSites Time Series Values\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nWater Rights\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Case figure\n\n\nPython Script\n\n\nInteractive figure\n\n\n\n\n\n\n\n\n\n\nFigure a\n\n\nscript\n\n\nFigure\n\n\n\n\n\n\n\n\n \nFigure 1: Differences in aggregated water demand for Cache County Utah across WEAP and WASH models and the WaDE web-service. Native attribute terms are in quotes. The curves are color coded from dark to light blue to indicate higher to lower overall demand volumes\n\n\nIn addition to demand data, the query also can return water rights data from the WaDE data source under the controlled Object Type \u201cDemand Site\u201d and attribute name of \u201cFlow\u201d. For example, the \u201cWATER RESEARCH LAB. UTAH STATE UNIVERSITY\u201d has two water rights. One of them is 84 AF/Year and 146 cfs for the beneficiary use descriptor value of \u201cPower\u201d. So WaMDaM organizes descriptive and numeric data for water rights.\n\n\nNext\n\n\nAfter identifying supply and demand data, the next use case identifies data that describe water infrastructure like reservoir bathymetry curves.", 
            "title": "Use case 3"
        }, 
        {
            "location": "/usecases/use_case_3/#use-case-3", 
            "text": "Identify and compare demand data for a site as reported in many sources      Example  \nWhat is the total agriculture water use or demand in Cache County, Utah?", 
            "title": "Use case 3"
        }, 
        {
            "location": "/usecases/use_case_3/#problem", 
            "text": "Identifying water use and demand data is probably the most difficult task in populating models with data. Likely in part because the source of data is specific to each study area compared to water supply data that are often available from national or regional sources like USGS and BOR. In Appendix B, we identify nine issues that users need to consider while working with and importing demand data into WaMDaM. They provide a better context to the results of the use case.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_3/#solution", 
            "text": "In the use case query, we aggregated and converted demand values to answer the use case question of how much water demand for agriculture in a geo-spatial boundary for Cache County in Utah, controlled attribute name \u201cflow\u201d, and instance category of \u201cAgriculture\u201d. We aggregated the data within the county for each data source and converted the units to acre-feet (Figure 8). The Figure shows data from four different sources: WEAP and WASH models, and the Water Data Exchange database (WaDE) by the Western States Water Council ( http://www.westernstateswater.org/wade/ ). The comparison here intends to show how WaMDaM enables querying all of them together and what each data source has data for. Users then can make an informed decision to choose the aggregation level or site specific demand data to their own model. Users also could possibly incorporate the total values for two equivalent estimates (two top curves) to test a model sensitivity to different demands.     We note that the number of available demand sites within the area is not necessarily an indicator of the demand volume per year but here it may indicate whether the reported value is aggregated from many or comes from one site. In Figure 8, one comparison point is that three models often represent demand as constant through years while the WaDE as new data source, can improve these models by considering variable demand. A second point is that data sources either have data for all the country area like in the WEAP Model 2017 and WaDE. Or they may cover part of the area like in the WASH and WEAP 2010 models based on the locations of the sites in the County compared to the WEAP 2017 model. The first two top curves in Figure 7 are comparable to each other as they cover the whole county in Utah and they have attributes of diverted or delivered water compared to consumptive water as in the third curve (from top) for WaDE. Obviously, the low values of the bottom two curves indicate that both WASH and WEAP 2010 models represent part of Cache County\u2019s demand as their study area and sites do not include all the county.    Table 1: Key different conceptual terms for demand available in models and data sources    All these differences are context specific and require knowledge of them before making comparisons which still make it challenging to correctly interpret data values and compare them. WaMDaM begins to enable such comparisons by organizing all the data sources into one database with mapping of terms through controlled vocabulary. We do not foresee WaMDaM to fully automate how the data is aggregated or grouped in this use case or others. There could be assumptions embedded in how the data is represented and grouped. WaMDaM however documents metadata which could help users more accurately interpret data values.      Use Case  Query  Result      IdentifyDemandSites  Query  Result  csv    Identify Demand Sites Seasonal Values  Query  Result  csv    Identify DemandSites Time Series Values  Query  Result  csv    Water Rights  Query  Result  csv        Use Case figure  Python Script  Interactive figure      Figure a  script  Figure      \nFigure 1: Differences in aggregated water demand for Cache County Utah across WEAP and WASH models and the WaDE web-service. Native attribute terms are in quotes. The curves are color coded from dark to light blue to indicate higher to lower overall demand volumes  In addition to demand data, the query also can return water rights data from the WaDE data source under the controlled Object Type \u201cDemand Site\u201d and attribute name of \u201cFlow\u201d. For example, the \u201cWATER RESEARCH LAB. UTAH STATE UNIVERSITY\u201d has two water rights. One of them is 84 AF/Year and 146 cfs for the beneficiary use descriptor value of \u201cPower\u201d. So WaMDaM organizes descriptive and numeric data for water rights.", 
            "title": "Solution"
        }, 
        {
            "location": "/usecases/use_case_3/#next", 
            "text": "After identifying supply and demand data, the next use case identifies data that describe water infrastructure like reservoir bathymetry curves.", 
            "title": "Next"
        }, 
        {
            "location": "/usecases/use_case_4/", 
            "text": "Use case 4\n\n\nIdentify and compare data that describe infrastructure across many sources\n  \n\n\nExample\n\nWhat is the volume, purpose, evaporation, and elevation of Hyrum Reservoir Utah?   \n\n\nProblem\n\n\nIdentifying data that describe the water system infrastructure like a reservoir purpose and its bathymetry requires specific and time consuming methods to query and manipulate them. \n\n\nSolution\n\n\nWaMDaM enables organizing all of such data types according to one method. We use the controlled instance name of \u201cHyrum Reservoir\u201d and a set of controlled attribute names to identify infrastructure related data: \u201cVolume\u201d, \u201cElevation\u201d, and \u201cPurpose\u201d. The query result in multiple values for available data types (e.g., numeric, time series). The query identified four different curves for volume-elevation and many volumes for Hyrum Reservoir. There are also two time series of storage and elevation which have the same time step and extent which allows plotting both of them as a fourth empirically derived storage and elevation curve (Figure 9). \n\n\nFirst of all, there appears to be a systematic displacement in elevation between the upper (red) and lower (black-grey) curves. Second the curves cover different ranges of volume. We identified the following insights after deliberate discussions in a meeting and many emails on the differences between them from the two main sources, the state of Utah where the reservoir is located and the BOR who owns the dam. We found that the upper (red) curves indicate the usable \u201clive storage\u201d which does not account for the unusable \u201cdead storage\u201d while the lower curves indicate the \u201ctotal storage\u201d. The BOR reported \u201cdead storage\u201d as 3012 acre-feet at the elevation of 4629.6 feet. Relevant to semantic differences, dead storage is also known in the WEAP Model as \u201cTop of Inactive\u201d and in WASH as \u201cMinCap\u201d. We found that subtracting or adding dead storage below the elevation of 4629.6 feet reproduces similar lower or upper curves. On the other hand, water managers at the Utah Division of Water Resources suggested that the extended lower two identical black and gray curves (they actually extend longer up to 70,000 acre-feet volume and 4,750 feet elevation (not shown)) could have been used to project future bathymetry extrapolation if the dam height is elevated.   \n\n\nThe data sources did not report the time it is used to measure the curves nor the specific method of estimating storage or elevation. In correspondence with the BOR, we found that water elevation in a reservoir is measured using a pressure transducer and the storage is computed from the elevation in a formula they have for the reservoir. We also found that the BOR updated the bathometry estimates for Hyrum Reservoir in 2006 which changed compared to the initial estimates in 1935. The total storage has decreased by 1,179 which is 6% less or the original storage due to decrease in both the dead and live storage. Table A7 in the Appendix lists all the identified volume values for Hyrum Reservoir and how the Utah and US Dams datasets and the WEAP and WASH models were reporting different storage values from the old and the new bathometry values without clear indication of which one it was. They also used these different native terms where none of them distinguished between live and total storage: Storage Capacity, STORG_ACFT, MAX_STOR, MaxCap. The query returns all the attribute with their different native terms because we registered each attribute with the controlled vocabulary term. The percentage of dead storage to total storage is relatively high about 17% in this small reservoir and misusing the total or live storage could make a big difference in modeling results.  \n\n\nThe data sources did not report the time it is used to measure the curves nor the specific method of estimating storage or elevation. In correspondence with the BOR, we found that water elevation in a reservoir is measured using a pressure transducer and the storage is computed from the elevation in a formula they have for the reservoir. We also found that the BOR updated the bathometry estimates for Hyrum Reservoir in 2006 which changed compared to the initial estimates in 1935. The total storage has decreased by 1,179 which is 6% less or the original storage due to decrease in both the dead and live storage. Table A7 in the Appendix lists all the identified volume values for Hyrum Reservoir and how the Utah and US Dams datasets and the WEAP and WASH models were reporting different storage values from the old and the new bathometry values without clear indication of which one it was. They also used these different native terms where none of them distinguished between live and total storage: Storage Capacity, STORG_ACFT, MAX_STOR, MaxCap. The query returns all the attribute with their different native terms because we registered each attribute with the controlled vocabulary term. The percentage of dead storage to total storage is relatively high about 17% in this small reservoir and misusing the total or live storage could make a big difference in modeling results. \n\n\nSuch above differences are not clearly defined in the datasets and they were not obvious until we compared them together from multiple datasets and asked about their metadata. The use of clear and consistent terminology and metadata to describe water system components can be very important for modeling and management of the system. WaMDaM provides an opportunity to improve how the use of terminology and metadata as users may look into metadata and contact the people who provided or created it to identify potential reasons for the differences which could be from using different methods, and assumptions if available. Organizing all the datasets with such different data types enables a more readily way to access and comparing them that was not possible before.\n\n\n\n\n\n\n\n\nUse Case\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nNumericValues_otherTypes\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nMultiAttributeValues\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nMergeTimeSeriesValues\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nNumericValues_Metadata\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nMultipleTimeSeriesColumnsSameTimeStamp\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nMultipleDescriptorValues_HydroPower\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse Case figure\n\n\nPython Script\n\n\nInteractive figure\n\n\n\n\n\n\n\n\n\n\nFigure\n\n\nscript\n\n\nFigure\n\n\n\n\n\n\n\n\n \n\nFigure 1\n: Five volume-elevation curves and volume values at three stages in Hyrum Reservoir, Utah as reported by multiple sources. Volume vertical lines are extended to the full range to cross all curves and for simplicity. Color-coded curves lighter to darker indicate larger volume at the same elevation. Color coded blue vertical lines indicate larger volume at low to high elevations. \n\n\nThe query earlier also returns many values about the reservoir purposes from the US Dams dataset (Table A8). The original data shapefile only stores the Descriptor Value code and keeps the definition separate in PDF of HTML pages. WaMDaM provides both so users can look up what each code means. Here Hyrum Reservoir is not reported to have hydropower as one of its purposes. In running the query on other reservoirs in Utah, we discovered that the purpose \u201cH\u201d which denotes Hydropower does not exist for other reservoirs in Utah that are known to generate hydropower like the Jordanelle Reservoir which has a capacity of 13 Megawatts. In a comparative analysis between the US Dams dataset and the US Hydropower dataset, another query searched for all the reservoirs in Utah that have Hydropower as recorded in the National Hydropower Datasets which retuned 73 plants. However, the National Dams dataset only returned 9 dams in Utah \u201cUT\u201d that have Hydropower \u201cH\u201d as one of its purposes. The latter query used the attribute \u201cState\u201d to select the search boundary which is another way other than using the coordinates. Here users can filter and search for nodes and links based on the values of their attributes. The Hydropower dataset returned that Hyrum Reservoir has a small hydropower plant with 0.5 Megawatts. In this case the comparison reveals that the Hydropower Dataset is more reliable in this regard and the US Dams dataset needs to be updated.  \n\n\nPopulating WaMDaM with multiple datasets from different sources (like hydropower and dams datasets) can complement each other and provide either similar, different, or additional data than otherwise of one dataset. Bringing all values together allows comparisons not only to the values but possibly to the underlying assumptions and methods among them. \n\n\nNext\n\n\nAfter identifying water supply, demand, and infrastructure, in the next use case users can identify the connectivity of a node site, inflow into and outflow of it which represents the mix of natural and built water management network.", 
            "title": "Use case 4"
        }, 
        {
            "location": "/usecases/use_case_4/#use-case-4", 
            "text": "Identify and compare data that describe infrastructure across many sources     Example \nWhat is the volume, purpose, evaporation, and elevation of Hyrum Reservoir Utah?", 
            "title": "Use case 4"
        }, 
        {
            "location": "/usecases/use_case_4/#problem", 
            "text": "Identifying data that describe the water system infrastructure like a reservoir purpose and its bathymetry requires specific and time consuming methods to query and manipulate them.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_4/#solution", 
            "text": "WaMDaM enables organizing all of such data types according to one method. We use the controlled instance name of \u201cHyrum Reservoir\u201d and a set of controlled attribute names to identify infrastructure related data: \u201cVolume\u201d, \u201cElevation\u201d, and \u201cPurpose\u201d. The query result in multiple values for available data types (e.g., numeric, time series). The query identified four different curves for volume-elevation and many volumes for Hyrum Reservoir. There are also two time series of storage and elevation which have the same time step and extent which allows plotting both of them as a fourth empirically derived storage and elevation curve (Figure 9).   First of all, there appears to be a systematic displacement in elevation between the upper (red) and lower (black-grey) curves. Second the curves cover different ranges of volume. We identified the following insights after deliberate discussions in a meeting and many emails on the differences between them from the two main sources, the state of Utah where the reservoir is located and the BOR who owns the dam. We found that the upper (red) curves indicate the usable \u201clive storage\u201d which does not account for the unusable \u201cdead storage\u201d while the lower curves indicate the \u201ctotal storage\u201d. The BOR reported \u201cdead storage\u201d as 3012 acre-feet at the elevation of 4629.6 feet. Relevant to semantic differences, dead storage is also known in the WEAP Model as \u201cTop of Inactive\u201d and in WASH as \u201cMinCap\u201d. We found that subtracting or adding dead storage below the elevation of 4629.6 feet reproduces similar lower or upper curves. On the other hand, water managers at the Utah Division of Water Resources suggested that the extended lower two identical black and gray curves (they actually extend longer up to 70,000 acre-feet volume and 4,750 feet elevation (not shown)) could have been used to project future bathymetry extrapolation if the dam height is elevated.     The data sources did not report the time it is used to measure the curves nor the specific method of estimating storage or elevation. In correspondence with the BOR, we found that water elevation in a reservoir is measured using a pressure transducer and the storage is computed from the elevation in a formula they have for the reservoir. We also found that the BOR updated the bathometry estimates for Hyrum Reservoir in 2006 which changed compared to the initial estimates in 1935. The total storage has decreased by 1,179 which is 6% less or the original storage due to decrease in both the dead and live storage. Table A7 in the Appendix lists all the identified volume values for Hyrum Reservoir and how the Utah and US Dams datasets and the WEAP and WASH models were reporting different storage values from the old and the new bathometry values without clear indication of which one it was. They also used these different native terms where none of them distinguished between live and total storage: Storage Capacity, STORG_ACFT, MAX_STOR, MaxCap. The query returns all the attribute with their different native terms because we registered each attribute with the controlled vocabulary term. The percentage of dead storage to total storage is relatively high about 17% in this small reservoir and misusing the total or live storage could make a big difference in modeling results.    The data sources did not report the time it is used to measure the curves nor the specific method of estimating storage or elevation. In correspondence with the BOR, we found that water elevation in a reservoir is measured using a pressure transducer and the storage is computed from the elevation in a formula they have for the reservoir. We also found that the BOR updated the bathometry estimates for Hyrum Reservoir in 2006 which changed compared to the initial estimates in 1935. The total storage has decreased by 1,179 which is 6% less or the original storage due to decrease in both the dead and live storage. Table A7 in the Appendix lists all the identified volume values for Hyrum Reservoir and how the Utah and US Dams datasets and the WEAP and WASH models were reporting different storage values from the old and the new bathometry values without clear indication of which one it was. They also used these different native terms where none of them distinguished between live and total storage: Storage Capacity, STORG_ACFT, MAX_STOR, MaxCap. The query returns all the attribute with their different native terms because we registered each attribute with the controlled vocabulary term. The percentage of dead storage to total storage is relatively high about 17% in this small reservoir and misusing the total or live storage could make a big difference in modeling results.   Such above differences are not clearly defined in the datasets and they were not obvious until we compared them together from multiple datasets and asked about their metadata. The use of clear and consistent terminology and metadata to describe water system components can be very important for modeling and management of the system. WaMDaM provides an opportunity to improve how the use of terminology and metadata as users may look into metadata and contact the people who provided or created it to identify potential reasons for the differences which could be from using different methods, and assumptions if available. Organizing all the datasets with such different data types enables a more readily way to access and comparing them that was not possible before.     Use Case  Query  Result      NumericValues_otherTypes  Query  Result  csv    MultiAttributeValues  Query  Result  csv    MergeTimeSeriesValues  Query  Result  csv    NumericValues_Metadata  Query  Result  csv    MultipleTimeSeriesColumnsSameTimeStamp  Query  Result  csv    MultipleDescriptorValues_HydroPower  Query  Result  csv        Use Case figure  Python Script  Interactive figure      Figure  script  Figure       Figure 1 : Five volume-elevation curves and volume values at three stages in Hyrum Reservoir, Utah as reported by multiple sources. Volume vertical lines are extended to the full range to cross all curves and for simplicity. Color-coded curves lighter to darker indicate larger volume at the same elevation. Color coded blue vertical lines indicate larger volume at low to high elevations.   The query earlier also returns many values about the reservoir purposes from the US Dams dataset (Table A8). The original data shapefile only stores the Descriptor Value code and keeps the definition separate in PDF of HTML pages. WaMDaM provides both so users can look up what each code means. Here Hyrum Reservoir is not reported to have hydropower as one of its purposes. In running the query on other reservoirs in Utah, we discovered that the purpose \u201cH\u201d which denotes Hydropower does not exist for other reservoirs in Utah that are known to generate hydropower like the Jordanelle Reservoir which has a capacity of 13 Megawatts. In a comparative analysis between the US Dams dataset and the US Hydropower dataset, another query searched for all the reservoirs in Utah that have Hydropower as recorded in the National Hydropower Datasets which retuned 73 plants. However, the National Dams dataset only returned 9 dams in Utah \u201cUT\u201d that have Hydropower \u201cH\u201d as one of its purposes. The latter query used the attribute \u201cState\u201d to select the search boundary which is another way other than using the coordinates. Here users can filter and search for nodes and links based on the values of their attributes. The Hydropower dataset returned that Hyrum Reservoir has a small hydropower plant with 0.5 Megawatts. In this case the comparison reveals that the Hydropower Dataset is more reliable in this regard and the US Dams dataset needs to be updated.    Populating WaMDaM with multiple datasets from different sources (like hydropower and dams datasets) can complement each other and provide either similar, different, or additional data than otherwise of one dataset. Bringing all values together allows comparisons not only to the values but possibly to the underlying assumptions and methods among them.", 
            "title": "Solution"
        }, 
        {
            "location": "/usecases/use_case_4/#next", 
            "text": "After identifying water supply, demand, and infrastructure, in the next use case users can identify the connectivity of a node site, inflow into and outflow of it which represents the mix of natural and built water management network.", 
            "title": "Next"
        }, 
        {
            "location": "/usecases/use_case_5/", 
            "text": "Use case 5\n\n\nIdentify inflow and outflow into and out of a node water system component and compare them across data sources or models\n   \n\n\nExample\n \n\nWhat is the inflow and outflow of Hyrum Reservoir, Utah?   \n\n\nProblem\n\n\nLearning about flow direction in water management networks can be time-consuming compared to natural hydrology networks. \n\n\nSolution\n\n\nWe use one query to identify inflow and outflow links based on a controlled node instance name \u201cHyrum Reservoir\u201d that serve as a start or end nodes to them. Similarly, the same query is applied to the \u201cBear River Migratory Bird Refuge\u201d at the mouth of Bear River to the Great Salt Lake. We only present results for Hyrum Reservoir for simplicity but both are available on GitHub. The query results in a table for the links that flows into or out of Hyrum Reservoir in three model scenarios in the Little Bear River Utah. We draw a schematic for each one which visually reveal similarities and differences among them (Figure 10). \n\n\nThe first model in Figure 10-A (left) is built in a GenRes UDWR model that is transferred into WEAP in 2010 for the Lower Bear River to allocate water based on priority. The middle one is a WEAP model that intends to improve the WEAP 2010 model to represent more specific supply and demand connectivity, among other improvements. The third model (right) is a WASH model to allocate water to maximize habitat suitable areas while meeting demand requirements. In the Figure 10-A (left) shows that Hyrum Reservoir supplies two demand sites and is constructed on the Little Bear River. In Figure 10-B (middle), none of the two demand sites exist in the new model but there are three demand sites with different names. On the other hand, the new model scenario has two demand sites, Hyrum and Paradise Canals that return flow back into Hyrum Reservoir. Figure 10-C (right) shows an identical schematic to Figure 10-B but the WASH model uses codes to name all its node and links. Registering controlled vocabulary for each node and link instance allows relating such coded and names instances. It is important to note that WaMDaM requires each node and link instance to have a source and method that would explain what it represent like an actual site or an aggregation of sites. Such network metadata would help explain interpreting its representation and comparing it with others. Comparing these three models allows users to identify how different models have modeled water supply and demand in the same region. They can incorporate one or many of these schematics to their new models. \n\n\nWaMDaM here enabled a more readily and consistent method to search for water system components as nodes and links and compare their connectivity across sources. This connectivity aspect of is an important improvement over the existing time series data discovery tools which identifies standalone nodes. With WaMDaM, users can identify how and where water flows from and into nodes. Future software tools may help users visualize and filter the results based on model, scenario, object type and categories. \n\n\n\n\n\n\n\n\nUse Case\n\n\nQuery\n\n\nResult\n\n\n\n\n\n\n\n\n\n\nNumericValues_otherTypes\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\nMultiAttributeValues\n\n\nQuery\n\n\nResult\n csv\n\n\n\n\n\n\n\n\n \n\nFigure 1\n: Schematics of identified water system node and link components that flow in our out of Hyrum Reservoir from three models in the Lower Bear River Watershed, Utah. Arrows indicate the direction of flow. Nodes or links with the same color and shape indicate they belong to same Object Type in the same model.\n\n\nNext\n\n\nThe next use case allows users to compare similarities and differences in network topology, metadata, and data values between two scenarios of any model in WaMDaM.", 
            "title": "Use case 5"
        }, 
        {
            "location": "/usecases/use_case_5/#use-case-5", 
            "text": "Identify inflow and outflow into and out of a node water system component and compare them across data sources or models      Example   \nWhat is the inflow and outflow of Hyrum Reservoir, Utah?", 
            "title": "Use case 5"
        }, 
        {
            "location": "/usecases/use_case_5/#problem", 
            "text": "Learning about flow direction in water management networks can be time-consuming compared to natural hydrology networks.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_5/#solution", 
            "text": "We use one query to identify inflow and outflow links based on a controlled node instance name \u201cHyrum Reservoir\u201d that serve as a start or end nodes to them. Similarly, the same query is applied to the \u201cBear River Migratory Bird Refuge\u201d at the mouth of Bear River to the Great Salt Lake. We only present results for Hyrum Reservoir for simplicity but both are available on GitHub. The query results in a table for the links that flows into or out of Hyrum Reservoir in three model scenarios in the Little Bear River Utah. We draw a schematic for each one which visually reveal similarities and differences among them (Figure 10).   The first model in Figure 10-A (left) is built in a GenRes UDWR model that is transferred into WEAP in 2010 for the Lower Bear River to allocate water based on priority. The middle one is a WEAP model that intends to improve the WEAP 2010 model to represent more specific supply and demand connectivity, among other improvements. The third model (right) is a WASH model to allocate water to maximize habitat suitable areas while meeting demand requirements. In the Figure 10-A (left) shows that Hyrum Reservoir supplies two demand sites and is constructed on the Little Bear River. In Figure 10-B (middle), none of the two demand sites exist in the new model but there are three demand sites with different names. On the other hand, the new model scenario has two demand sites, Hyrum and Paradise Canals that return flow back into Hyrum Reservoir. Figure 10-C (right) shows an identical schematic to Figure 10-B but the WASH model uses codes to name all its node and links. Registering controlled vocabulary for each node and link instance allows relating such coded and names instances. It is important to note that WaMDaM requires each node and link instance to have a source and method that would explain what it represent like an actual site or an aggregation of sites. Such network metadata would help explain interpreting its representation and comparing it with others. Comparing these three models allows users to identify how different models have modeled water supply and demand in the same region. They can incorporate one or many of these schematics to their new models.   WaMDaM here enabled a more readily and consistent method to search for water system components as nodes and links and compare their connectivity across sources. This connectivity aspect of is an important improvement over the existing time series data discovery tools which identifies standalone nodes. With WaMDaM, users can identify how and where water flows from and into nodes. Future software tools may help users visualize and filter the results based on model, scenario, object type and categories.      Use Case  Query  Result      NumericValues_otherTypes  Query  Result  csv    MultiAttributeValues  Query  Result  csv       Figure 1 : Schematics of identified water system node and link components that flow in our out of Hyrum Reservoir from three models in the Lower Bear River Watershed, Utah. Arrows indicate the direction of flow. Nodes or links with the same color and shape indicate they belong to same Object Type in the same model.", 
            "title": "Solution"
        }, 
        {
            "location": "/usecases/use_case_5/#next", 
            "text": "The next use case allows users to compare similarities and differences in network topology, metadata, and data values between two scenarios of any model in WaMDaM.", 
            "title": "Next"
        }, 
        {
            "location": "/usecases/use_case_6/", 
            "text": "Use case 6\n\n\nCompare differences in network topology and data values between two model scenarios\n  \n\n\nExample\n \n\nWhat is the difference in input data between the two scenarios or the Bear River WEAP model?   \n\n\nProblem\n\n\nComparing differences and similarities in input data and network topology between scenarios of a model in a study area can be specific, manual, and cumbersome if it is not natively supported by a model or a dataset. Communicating differences in scenarios and how they relate with changes in results is fundamental to defining the scenario itself and what changes. \n\n\nSolution\n\n\nFigure 10 earlier in Use Case 5 showed a visual comparison between the network topology in [A] and [B], within the same Master Network of \u201cBear River\u201d and Dataset of \u201cWEAP\u201d. But how could we perform reproducible objective comparisons for large networks? We wrote a complex script in the WaMDaM Wizard to provide users with automatic and systematic detailed and statistical comparisons between scenarios of the same model and network in the database for network topology, metadata, and data values. The comparisons as discussed earlier in Section 4.2 is based on the Mapping and ScenarioMapping tables that only store unique values and reuses shared values.    \n\n\nHere we provide the scenario comparison in two different models: WEAP and the BRSDM model (Table 5). In the shared column, the WEAP models have a small percentage of shared network instances, metadata, data values while the BRSDM Model scenarios have identical network and metadata but share about 80% of data values which leaves 10% unique values to each scenarios. This enabled comparison is very effective to first identify similarities and differences between scenarios input data. This capability does not exist in WEAP nor in the separate model Excel sheets for each BRSDM model scenario. In the BRSDM Model, the following attributes have data values being unique to each scenario. All of them are changes in flow data: \u201cHistoric Diversion outflow\u201d, \u201cTotal Diversion flow\u201d, \u201cTotal Irrigation Returns\u201d, \u201cTotal Ungagged Reach Gains\u201d, \u201cTotal Ungagged Reach Losses\u201d, and \u201cAverage Monthly Streamflow\u201d. An example of the change in Average Monthly Streamflow for \u201cNode 12.04\u201d which is Below Stewart Dam has already been presented in Figure 6-A as seasonal data. \n\n\nAlthough data storage size is often not a concern in water resources systems models, sharing common data and metadata between scenarios reduces the storage size because only unique values are stored. The storage savings happen in the tables of \u201cMapping\u201d, \u201cInstances\u201d, \u201cConnections\u201d, \u201cDataValuesMapper\u201d, and any of the data values tables like time series and numeric values. We measure storage savings by the percentage reduction of the number of records between two scenarios in this table. The WEAP model scenarios have small fraction of shared data which translate to about 6% of savings in storage (56 less records to store). The BRSDM model scenarios completely share the network topology and metadata with changes only to data values which means here that 47% of savings records (1,865 less records to store). \n\n\nTable 1\n: Comparison statistical summary of unique and shared network topology, metadata and data values between two scenarios and models in the Bear River Watershed \n\n \n\n\nTable A10 in Appendix A summarizes the use cases, their results, and the incurred insight and benefit of using WaMDaM. In general, WaMDaM design enabled all the use cases because of i) consistency in the same structure (i.e., set of related tables) to organize object types, attributes, instances, and their data values for all the models and datasets and ii) allowing users to register the native terms of each with controlled vocabulary which enables linking equivalent terms across datasets together. Overall, results of use cases reveal inconsistences and similarities in datasets which can be further investigated with the help of metadata or incorporated in models as sensitivity analysis. WaMDaM enables a more readily and consistent method to compare and communicate similarities and differences between scenarios of models.", 
            "title": "Use case 6"
        }, 
        {
            "location": "/usecases/use_case_6/#use-case-6", 
            "text": "Compare differences in network topology and data values between two model scenarios     Example   \nWhat is the difference in input data between the two scenarios or the Bear River WEAP model?", 
            "title": "Use case 6"
        }, 
        {
            "location": "/usecases/use_case_6/#problem", 
            "text": "Comparing differences and similarities in input data and network topology between scenarios of a model in a study area can be specific, manual, and cumbersome if it is not natively supported by a model or a dataset. Communicating differences in scenarios and how they relate with changes in results is fundamental to defining the scenario itself and what changes.", 
            "title": "Problem"
        }, 
        {
            "location": "/usecases/use_case_6/#solution", 
            "text": "Figure 10 earlier in Use Case 5 showed a visual comparison between the network topology in [A] and [B], within the same Master Network of \u201cBear River\u201d and Dataset of \u201cWEAP\u201d. But how could we perform reproducible objective comparisons for large networks? We wrote a complex script in the WaMDaM Wizard to provide users with automatic and systematic detailed and statistical comparisons between scenarios of the same model and network in the database for network topology, metadata, and data values. The comparisons as discussed earlier in Section 4.2 is based on the Mapping and ScenarioMapping tables that only store unique values and reuses shared values.      Here we provide the scenario comparison in two different models: WEAP and the BRSDM model (Table 5). In the shared column, the WEAP models have a small percentage of shared network instances, metadata, data values while the BRSDM Model scenarios have identical network and metadata but share about 80% of data values which leaves 10% unique values to each scenarios. This enabled comparison is very effective to first identify similarities and differences between scenarios input data. This capability does not exist in WEAP nor in the separate model Excel sheets for each BRSDM model scenario. In the BRSDM Model, the following attributes have data values being unique to each scenario. All of them are changes in flow data: \u201cHistoric Diversion outflow\u201d, \u201cTotal Diversion flow\u201d, \u201cTotal Irrigation Returns\u201d, \u201cTotal Ungagged Reach Gains\u201d, \u201cTotal Ungagged Reach Losses\u201d, and \u201cAverage Monthly Streamflow\u201d. An example of the change in Average Monthly Streamflow for \u201cNode 12.04\u201d which is Below Stewart Dam has already been presented in Figure 6-A as seasonal data.   Although data storage size is often not a concern in water resources systems models, sharing common data and metadata between scenarios reduces the storage size because only unique values are stored. The storage savings happen in the tables of \u201cMapping\u201d, \u201cInstances\u201d, \u201cConnections\u201d, \u201cDataValuesMapper\u201d, and any of the data values tables like time series and numeric values. We measure storage savings by the percentage reduction of the number of records between two scenarios in this table. The WEAP model scenarios have small fraction of shared data which translate to about 6% of savings in storage (56 less records to store). The BRSDM model scenarios completely share the network topology and metadata with changes only to data values which means here that 47% of savings records (1,865 less records to store).   Table 1 : Comparison statistical summary of unique and shared network topology, metadata and data values between two scenarios and models in the Bear River Watershed     Table A10 in Appendix A summarizes the use cases, their results, and the incurred insight and benefit of using WaMDaM. In general, WaMDaM design enabled all the use cases because of i) consistency in the same structure (i.e., set of related tables) to organize object types, attributes, instances, and their data values for all the models and datasets and ii) allowing users to register the native terms of each with controlled vocabulary which enables linking equivalent terms across datasets together. Overall, results of use cases reveal inconsistences and similarities in datasets which can be further investigated with the help of metadata or incorporated in models as sensitivity analysis. WaMDaM enables a more readily and consistent method to compare and communicate similarities and differences between scenarios of models.", 
            "title": "Solution"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/", 
            "text": "Design Requirements: Synthesis of Prior Approaches\n\n\nQuestions\n\n\nWe identified six different example use cases to guide the design of WaMDaM, demonstrate its capabilities, and define its objectives. The use cases focus on a user\u2019s perspective where each one is standalone but they complement each other. The use cases, although not inclusive to all possibilities, represent an attempt to cover important and key aspects of the domain of models\u2019 data requirements, supply, demand, and infrastructure, connectivity, and scenario comparisons. We draw details on the current practices and use cases to organize data from literature, from our research group experience, and informal conversations with collaborators and stakeholders.   \n\n\nThe overarching goal of the use cases is to demonstrate how WaMDaM as a one method enables systematic data query and comparisons across multiple different models and datasets. The ability to perform systematic comparisons across overlapping datasets in a study area is fundamental to data analysis (Caramani, 2009). We provide the use cases in the form of specific questions as examples to avoid abstraction, but they are intended in principle to apply to other models, attributes, and components as we explain throughout the paper and in Section 4. The specificity here applies to example models and systems components in a selected study area within any selected geo-spatial boundary as discussed later. \n\n\nThe use cases are:\n  \n\n\n\n\n\n\nWhat are the data availability in WaMDaM database for attributes needed to develop a WEAP and WASH models in the Bear River Watershed, USA?\n\n\n\n\n\n\nWhat is the water supply flow at the site below Stewart Dam in Idaho?\n\n\n\n\n\n\nWhat is the water demand for agriculture in Cache County, Utah?\n\n\n\n\n\n\nWhat are the purpose (s), volume and elevation curve of Hyrum Reservoir, Utah? what is the source of data?\n\n\n\n\n\n\nWhat are the natural and built infrastructure that are connected to Hyrum Reservoir, Utah?\n\n\n\n\n\n\nWhat are the differences in network topology, metadata, and input data between the two scenarios within the WEAP and BRSDM Bear River models?\n\n\n\n\n\n\nAnswering these questions using the existing methods requires many datasets, manual data manipulations that often cannot be reused for other datasets, and thus takes considerable effort and time. Satisfying these use cases is the top design priority while other potential different use cases can be addressed in future work based on users\u2019 experiences. Next we elaborate on our methodology in revering existing systems as a basis to synthesize their strengths into a WaMDaM design. \n\n\nSynthesis of design features\n\n\nReviewing existing data management systems like the mentioned above revealed that they support one or some of the features that would allow water managers to organize and compare water management data across multiple sources and models, but no existing method supports all features (Table 1)\n\n\nTogether, the following eight features can constitute design requirements for a new information model to organize water management data for multiple datasets and models. First, the new method needs to support different water resources systems components that are used in water management models like hydrology, infrastructure, and demand sites as reusable modules or sets of systems components. Second, the method must represent connectivity and interactions between components in space through networks of nodes and links as used in systems modeling. Third, the method must support scenarios that track topologic and data values changes in networks. Fourth, it must support multiple data types that are used in systems modeling like time series and multidimensional arrays. Fifth, it must use consistent contextual metadata to unambiguously interpret data values. Sixth, it must use controlled vocabulary to relate inconsistent terms across data sources and models. Seventh, it must enable conditional data queries to access and compare subsets of data and metadata, and eighth, the method must be developed in an open-source software environment. \n\n\nTable 1:\n The identified requirements that are supported by select data systems and water resources models for a method to organize and prepare data for multiple datasets and models. An \u201cx\u201d indicates that the feature is supported. WaMDaM is designed to support all of the features\n\n           \n\n\nFeatures in details\n\n\nFeature 1\n\n\nRepresenting multiple systems components like reservoirs and demand sites in reusable data modules would allow researchers to define water system components as objects (i.e., classes) with properties to describe their qualitative or quantitative data (Connolly and Begg, 2010; Wurbs, 2012; Zagona et al., 2001). This representation would then allow users to reuse or add new objects to their model, which makes it an extensible data model design (Connolly and Begg, 2010; Goodall et al., 2011; Kokkonen et al., 2003; Pokorn\u00fd, 2006). Most of the reviewed systems and water management models have this modular design but often it is limited to a pre-defined set of supported object types. Thus having a modular and extensible design would allow adding or removing modules based on each model\u2019s data need. \n\n\nFeature 2\n\n\nIn the second feature, networks connect node and link representations of systems components in two dimension in space. We use the notion of node as equivalent to a junction or point, and a link as equivalent to arc, connection, curve, line, or an edge as used in different software (HydroLogics, 2009; Rossman, 2000; Zeiler, 1999). Vertex is a type of node that changes the spatial layout of a link but keeps it as one link. Networks help users to organize and then search groups of system components that are related for a purpose (e.g., flow of water through connected pipes) for a particular domain (e.g., drinking water supply) in a specific spatial boundary (Loucks et al., 2005). Most of the reviewed systems support creating instances of their object types, and adding links that connect nodes but it is out of the scope of some models.\n\n\nFeature 3\n\n\nScenarios track changes in networks for a specific physical, operation, and socio-economic configuration of a systems model which are like versions of the network and its data. A scenario represents one or more of potentially three changes to a network: i) change in topology like adding or removing an infrastructure component, ii) change in metadata like changing a method or data source of an attribute values, iii) or changing data values for one or more component attributes. Many of the reviewed systems have the ability to support scenarios but none of them support the three identified types of scenarios changes. \n\n\nFeature 4\n\n\nMetadata provides ancillary information to help interpret data values of components\u2019 attributes. Metadata also helps users maintain the data provenance that is needed to track the history and context of data of  i) sources, ii) methods, iii) people and iv) organizations that contributed to create a data value (Campbell et al., 2013; Carata et al., 2014; DCMI, 2013; Goodman et al., 2014; Gray et al., 2005; Horsburgh et al., 2008; Pokorn\u00fd, 2006). Most of the reviewed systems support adding some metadata but often it is either completely optional or not supported explicitly under those four categories. \n\n\nFeature 5\n\n\nControlled vocabularies (CVs) are often a set of agreed upon terms for attributes with definitions that users can use to relate with synonyms across data sources for different networks (Laniak et al., 2013). The only common CVs system that exists for the water resources community was proposed in the ODM and then adopted by CUAHSI. \nhttp://his.cuahsi.org/mastercvreg/cv11.aspx\n). Relating water management datasets at a basic level would need controlling the Object Type, Attribute Name, and Instance Name. The CUAHSI CVs supports two main types of CVs that would overlap with WaMDaM. The Site Type in CUAHSI is equivalent to Object Type in WaMDaM and the Variable Name is equivalent to Attribute Name in WaMDaM. The water management terms in datasets and models for Object Types and Attributes can be more specific than what is used for observational purposes in CUAHSI. For example, CUAHSI has one CV Site Type term for \u201cLake, Reservoir, Impoundment\u201d where in water management, each of the sub names in the term has different purpose in the context of water management. WaMDaM uses \u201cattribute\u201d as it extends beyond the often quantitative time series data as in CUAHSI to include qualitative of descriptive data as explained later in Section 3. One additional CV type that is needed in WaMDaM is the ability to control the Instance name which is equivalent to the uncontrolled field in CUAHSI for site code. Later we suggest expanding the CUAHSI CVs system to support water management terms. \n\n\nFeature 6\n\n\nData of systems modeling often consist of multiple types that represent physical, operational, and descriptive attributes of components: time series, multi attribute series (i.e., arrays or multi-dimensions), numeric and descriptor parameters, seasonal parameters, and binary dual values (Table 2). We keep in mind that an attribute may apply to all the network components as one global attribute or to each, one-at-a-time as local attribute to one component. For example, a time series of inflow applies to one reservoir component while the same time series of evaporation applies to all the reservoirs in the network. We selected those prominent data types for our use cases and we recognize there are more complex data types for future work like rules or formulas which associate multiple attributes with mathematical symbols. These data types are not exhaustive of what is used in systems models but they satisfy the identified use cases and data sources and models in this study. We require the design to be flexible to address adding or removing data types. Many of the reviewed systems support these data types but they fall short in other design requirements of having structured metadata to describe them. They may also have limited ability to readily allow users a conditional query and access all the data values. One significant improvement WaMDaM would contributes over the CUAHSI data system is the ability to organize multi attribute series or arrays which are pervasive in water management data. \n\n\nTable 2: Selected data types, their definitions, and examples in water resources systems models\n\n           \n\n\nFeature 7\n\n\nConditional data queries support the loading and retrieval of subsets of data based on selected water system components, attributes, metadata, networks, scenarios, and data types in space and time, without the need for a third party software. Thus, conditional queries enable users to query, synthesize, and compare subsets of water management data and use them in models. Many of the reviewed systems have built-in functionality which limits the ability to freely query and compare data across the elements above. As mentioned in the next section, we choose the relational database theory for WaMDaM, in part to enable conditional data queries.  \n\n\nFeature 8\n\n\nWe commit to using WaMDaM in a free and open-source software environment and publish its source-code in GitHub. Meeting this eighth requirement will allow liberal use of the code, promote reproducibility, and help others further advance the method (Easterbrook, 2014; Gil et al., 2016; Goodman et al., 2014).", 
            "title": "Design Requirment"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#design-requirements-synthesis-of-prior-approaches", 
            "text": "", 
            "title": "Design Requirements: Synthesis of Prior Approaches"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#questions", 
            "text": "We identified six different example use cases to guide the design of WaMDaM, demonstrate its capabilities, and define its objectives. The use cases focus on a user\u2019s perspective where each one is standalone but they complement each other. The use cases, although not inclusive to all possibilities, represent an attempt to cover important and key aspects of the domain of models\u2019 data requirements, supply, demand, and infrastructure, connectivity, and scenario comparisons. We draw details on the current practices and use cases to organize data from literature, from our research group experience, and informal conversations with collaborators and stakeholders.     The overarching goal of the use cases is to demonstrate how WaMDaM as a one method enables systematic data query and comparisons across multiple different models and datasets. The ability to perform systematic comparisons across overlapping datasets in a study area is fundamental to data analysis (Caramani, 2009). We provide the use cases in the form of specific questions as examples to avoid abstraction, but they are intended in principle to apply to other models, attributes, and components as we explain throughout the paper and in Section 4. The specificity here applies to example models and systems components in a selected study area within any selected geo-spatial boundary as discussed later.   The use cases are:       What are the data availability in WaMDaM database for attributes needed to develop a WEAP and WASH models in the Bear River Watershed, USA?    What is the water supply flow at the site below Stewart Dam in Idaho?    What is the water demand for agriculture in Cache County, Utah?    What are the purpose (s), volume and elevation curve of Hyrum Reservoir, Utah? what is the source of data?    What are the natural and built infrastructure that are connected to Hyrum Reservoir, Utah?    What are the differences in network topology, metadata, and input data between the two scenarios within the WEAP and BRSDM Bear River models?    Answering these questions using the existing methods requires many datasets, manual data manipulations that often cannot be reused for other datasets, and thus takes considerable effort and time. Satisfying these use cases is the top design priority while other potential different use cases can be addressed in future work based on users\u2019 experiences. Next we elaborate on our methodology in revering existing systems as a basis to synthesize their strengths into a WaMDaM design.", 
            "title": "Questions"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#synthesis-of-design-features", 
            "text": "Reviewing existing data management systems like the mentioned above revealed that they support one or some of the features that would allow water managers to organize and compare water management data across multiple sources and models, but no existing method supports all features (Table 1)  Together, the following eight features can constitute design requirements for a new information model to organize water management data for multiple datasets and models. First, the new method needs to support different water resources systems components that are used in water management models like hydrology, infrastructure, and demand sites as reusable modules or sets of systems components. Second, the method must represent connectivity and interactions between components in space through networks of nodes and links as used in systems modeling. Third, the method must support scenarios that track topologic and data values changes in networks. Fourth, it must support multiple data types that are used in systems modeling like time series and multidimensional arrays. Fifth, it must use consistent contextual metadata to unambiguously interpret data values. Sixth, it must use controlled vocabulary to relate inconsistent terms across data sources and models. Seventh, it must enable conditional data queries to access and compare subsets of data and metadata, and eighth, the method must be developed in an open-source software environment.   Table 1:  The identified requirements that are supported by select data systems and water resources models for a method to organize and prepare data for multiple datasets and models. An \u201cx\u201d indicates that the feature is supported. WaMDaM is designed to support all of the features", 
            "title": "Synthesis of design features"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#features-in-details", 
            "text": "", 
            "title": "Features in details"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-1", 
            "text": "Representing multiple systems components like reservoirs and demand sites in reusable data modules would allow researchers to define water system components as objects (i.e., classes) with properties to describe their qualitative or quantitative data (Connolly and Begg, 2010; Wurbs, 2012; Zagona et al., 2001). This representation would then allow users to reuse or add new objects to their model, which makes it an extensible data model design (Connolly and Begg, 2010; Goodall et al., 2011; Kokkonen et al., 2003; Pokorn\u00fd, 2006). Most of the reviewed systems and water management models have this modular design but often it is limited to a pre-defined set of supported object types. Thus having a modular and extensible design would allow adding or removing modules based on each model\u2019s data need.", 
            "title": "Feature 1"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-2", 
            "text": "In the second feature, networks connect node and link representations of systems components in two dimension in space. We use the notion of node as equivalent to a junction or point, and a link as equivalent to arc, connection, curve, line, or an edge as used in different software (HydroLogics, 2009; Rossman, 2000; Zeiler, 1999). Vertex is a type of node that changes the spatial layout of a link but keeps it as one link. Networks help users to organize and then search groups of system components that are related for a purpose (e.g., flow of water through connected pipes) for a particular domain (e.g., drinking water supply) in a specific spatial boundary (Loucks et al., 2005). Most of the reviewed systems support creating instances of their object types, and adding links that connect nodes but it is out of the scope of some models.", 
            "title": "Feature 2"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-3", 
            "text": "Scenarios track changes in networks for a specific physical, operation, and socio-economic configuration of a systems model which are like versions of the network and its data. A scenario represents one or more of potentially three changes to a network: i) change in topology like adding or removing an infrastructure component, ii) change in metadata like changing a method or data source of an attribute values, iii) or changing data values for one or more component attributes. Many of the reviewed systems have the ability to support scenarios but none of them support the three identified types of scenarios changes.", 
            "title": "Feature 3"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-4", 
            "text": "Metadata provides ancillary information to help interpret data values of components\u2019 attributes. Metadata also helps users maintain the data provenance that is needed to track the history and context of data of  i) sources, ii) methods, iii) people and iv) organizations that contributed to create a data value (Campbell et al., 2013; Carata et al., 2014; DCMI, 2013; Goodman et al., 2014; Gray et al., 2005; Horsburgh et al., 2008; Pokorn\u00fd, 2006). Most of the reviewed systems support adding some metadata but often it is either completely optional or not supported explicitly under those four categories.", 
            "title": "Feature 4"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-5", 
            "text": "Controlled vocabularies (CVs) are often a set of agreed upon terms for attributes with definitions that users can use to relate with synonyms across data sources for different networks (Laniak et al., 2013). The only common CVs system that exists for the water resources community was proposed in the ODM and then adopted by CUAHSI.  http://his.cuahsi.org/mastercvreg/cv11.aspx ). Relating water management datasets at a basic level would need controlling the Object Type, Attribute Name, and Instance Name. The CUAHSI CVs supports two main types of CVs that would overlap with WaMDaM. The Site Type in CUAHSI is equivalent to Object Type in WaMDaM and the Variable Name is equivalent to Attribute Name in WaMDaM. The water management terms in datasets and models for Object Types and Attributes can be more specific than what is used for observational purposes in CUAHSI. For example, CUAHSI has one CV Site Type term for \u201cLake, Reservoir, Impoundment\u201d where in water management, each of the sub names in the term has different purpose in the context of water management. WaMDaM uses \u201cattribute\u201d as it extends beyond the often quantitative time series data as in CUAHSI to include qualitative of descriptive data as explained later in Section 3. One additional CV type that is needed in WaMDaM is the ability to control the Instance name which is equivalent to the uncontrolled field in CUAHSI for site code. Later we suggest expanding the CUAHSI CVs system to support water management terms.", 
            "title": "Feature 5"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-6", 
            "text": "Data of systems modeling often consist of multiple types that represent physical, operational, and descriptive attributes of components: time series, multi attribute series (i.e., arrays or multi-dimensions), numeric and descriptor parameters, seasonal parameters, and binary dual values (Table 2). We keep in mind that an attribute may apply to all the network components as one global attribute or to each, one-at-a-time as local attribute to one component. For example, a time series of inflow applies to one reservoir component while the same time series of evaporation applies to all the reservoirs in the network. We selected those prominent data types for our use cases and we recognize there are more complex data types for future work like rules or formulas which associate multiple attributes with mathematical symbols. These data types are not exhaustive of what is used in systems models but they satisfy the identified use cases and data sources and models in this study. We require the design to be flexible to address adding or removing data types. Many of the reviewed systems support these data types but they fall short in other design requirements of having structured metadata to describe them. They may also have limited ability to readily allow users a conditional query and access all the data values. One significant improvement WaMDaM would contributes over the CUAHSI data system is the ability to organize multi attribute series or arrays which are pervasive in water management data.   Table 2: Selected data types, their definitions, and examples in water resources systems models", 
            "title": "Feature 6"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-7", 
            "text": "Conditional data queries support the loading and retrieval of subsets of data based on selected water system components, attributes, metadata, networks, scenarios, and data types in space and time, without the need for a third party software. Thus, conditional queries enable users to query, synthesize, and compare subsets of water management data and use them in models. Many of the reviewed systems have built-in functionality which limits the ability to freely query and compare data across the elements above. As mentioned in the next section, we choose the relational database theory for WaMDaM, in part to enable conditional data queries.", 
            "title": "Feature 7"
        }, 
        {
            "location": "/DesignDocumentation/Desing_Req/#feature-8", 
            "text": "We commit to using WaMDaM in a free and open-source software environment and publish its source-code in GitHub. Meeting this eighth requirement will allow liberal use of the code, promote reproducibility, and help others further advance the method (Easterbrook, 2014; Gil et al., 2016; Goodman et al., 2014).", 
            "title": "Feature 8"
        }, 
        {
            "location": "/DesignDocumentation/info_model/", 
            "text": "WaMDaM Information Model\n\n\nThe Water Management Data Model (WaMDaM) is information model to organize water management data with contextual metadata and controlled vocabulary for multiple datasets and models. WaMDaM is implemented in a relational model and works for SQLite, MySQL, PostgreSQL, and Microsoft SQL Server. \n\n\nInformation Model Concepts and their description\n\n\n\n\nFigure 1\n: Conceptual diagram of the water management information model constructs and their relationships within five groupings. Key controlled vocabulary will be introduced to the boxes outlined in purple. The \u201cCategory\u201d box applies separately to group each of Object Types, Attributes, and Instances (not connected here for simplicity).  \n\n\nDataset Structure\n\n\nA Dataset concept can associate with one or more Object Type concepts. An Object Type is a system component and can have one or more Attributes. An Attribute is quantitative or qualitative property that describes the Object Type. An Object Type can be later specified for a particular location as an Instance (e.g., Hyrum Reservoir). Users can define and customize as many combinations of Object Types and Attributes for models and datasets as they need without being limited to any predefined structure.   \n\n\nOptionally, to group many Object Types that share a common classification, users may relate one or many Object Types into a defined Category. The Category defined here, is a simplistic grouping and can be used to query and filter a group of Object Types within the same Dataset. For example, a \u201csupply\u201d or \u201cdemand\u201d Categories can group all its Objects. Similarly, for Attributes, \u201ccost\u201d and \u201cHydropower\u201d can be used to group a set of attributes of an Object Type. A more sophisticated hierarchical grouping within the category itself (also referred to as ontology) (Uschold and Gruninger, 2004) is out of the scope of this work and maybe improved in future work to meet additional specific use cases. This capability to build data structures meets the first design requirement to be modular and extensible to represent systems components.  \n\n\nNetworks\n\n\nIn the Networks group (green), an Instance is a particular implementation of an Object Type and inherits its properties. An Instance may be geo-referenced as a node in space with longitude and latitude coordinates or as a link, that has start and end nodes as a Connection. We use the general concept of Instance to refer to nodes and links because both of them have similar descriptions except that the link must reference a start and end node. Many node and link Instances belong to a Scenario to represent a particular topological relationship (e.g., existing infrastructure, proposed). Many Scenarios can belong to a Master Network where a Network represents all the nodes and links that exist across its Scenarios (i.e., sub-networks). Similarly to Object Types and Attributes grouping, a Category can group a set of node or link Instances that share a common classification that is specific to some of the Object Type Instances but not all. For example, \u201cRiverine\u201d or \u201cFloodplain\u201d categories may apply to particular (not all) links of a stream Object Type as in the WASH model. Nodes, Links, and their Networks represent the second design requirement and Scenarios represent the third design requirement.  \n\n\nMetadata\n\n\nIn the Metadata group (orange), metadata apply to each of the following three elements of water systems data: the Instance, Scenario, Attribute, and its Data Values. WaMDaM supports four essential key metadata to interpret data values i) the source of the element, ii) the method of creating the element and its type (e.g., measured, derived), iii) the organization and people who generate methods and serve as contact at sources. People and Organization for Sources might be different for Methods. For example, a data Source of United States Geological Survey (USGS) organization may use a Method defined by the Army Corps of Engineers organization, and iv) the unit of data values of an attribute. A unit is connected to an attribute at the Object Type level which enforces the same unit for an attribute of all instances. Thus, WaMDaM enforces unit consistency across instances of the same attribute as required by most of the reviewed models. A defined explicit structure of these metadata guides users to consistently document their metadata. A consistent metadata structure also helps users to access metadata directly and reuses it where applicable. These structured metadata satisfy the fifth design requirement.  \n\n\nData Values\n\n\nIn the Data Values group (red), each Attribute for an Instance within a Scenario can have Data Values of any of the seven data types listed at the far right of (Figure 2). Data Values will be stored separately based on their data type to reinforce the persistency of the data model and guide users to only populate or query relevant data values. Persistency here means that data values are only stored and accessed in one place that does not change within the data model. Additional Data Types can be added (or removed) to the data model as a box, far right in (Figure 2) with no other changes  \n\n\nControlled Vocabulary\n\n\nIn the controlled vocabularies group (purple), and sixth design requirement, optional vocabularies apply to the key concepts outlined in purple boxes in (Figure 2) to relate different terminology for similar Object Types, Attributes, and Instances across data sources and models. For example, the term \u201creservoir\u201d could be used as a term that relates the \u201cwater body\u201d and \u201cdam\u201d Object Types that originate from separate models and data sources: the \u201cWaterbodies\u201d from the USGS National Hydrography Dataset and the \u201cDams\u201d dataset from the US Army Corps of Engineers. Thus, a query to search for \u201creservoir\u201d will return the terms: reservoir, water body, and dam, as demonstrated in the first use case.", 
            "title": "Design documentation"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#wamdam-information-model", 
            "text": "The Water Management Data Model (WaMDaM) is information model to organize water management data with contextual metadata and controlled vocabulary for multiple datasets and models. WaMDaM is implemented in a relational model and works for SQLite, MySQL, PostgreSQL, and Microsoft SQL Server.", 
            "title": "WaMDaM Information Model"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#information-model-concepts-and-their-description", 
            "text": "Figure 1 : Conceptual diagram of the water management information model constructs and their relationships within five groupings. Key controlled vocabulary will be introduced to the boxes outlined in purple. The \u201cCategory\u201d box applies separately to group each of Object Types, Attributes, and Instances (not connected here for simplicity).", 
            "title": "Information Model Concepts and their description"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#dataset-structure", 
            "text": "A Dataset concept can associate with one or more Object Type concepts. An Object Type is a system component and can have one or more Attributes. An Attribute is quantitative or qualitative property that describes the Object Type. An Object Type can be later specified for a particular location as an Instance (e.g., Hyrum Reservoir). Users can define and customize as many combinations of Object Types and Attributes for models and datasets as they need without being limited to any predefined structure.     Optionally, to group many Object Types that share a common classification, users may relate one or many Object Types into a defined Category. The Category defined here, is a simplistic grouping and can be used to query and filter a group of Object Types within the same Dataset. For example, a \u201csupply\u201d or \u201cdemand\u201d Categories can group all its Objects. Similarly, for Attributes, \u201ccost\u201d and \u201cHydropower\u201d can be used to group a set of attributes of an Object Type. A more sophisticated hierarchical grouping within the category itself (also referred to as ontology) (Uschold and Gruninger, 2004) is out of the scope of this work and maybe improved in future work to meet additional specific use cases. This capability to build data structures meets the first design requirement to be modular and extensible to represent systems components.", 
            "title": "Dataset Structure"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#networks", 
            "text": "In the Networks group (green), an Instance is a particular implementation of an Object Type and inherits its properties. An Instance may be geo-referenced as a node in space with longitude and latitude coordinates or as a link, that has start and end nodes as a Connection. We use the general concept of Instance to refer to nodes and links because both of them have similar descriptions except that the link must reference a start and end node. Many node and link Instances belong to a Scenario to represent a particular topological relationship (e.g., existing infrastructure, proposed). Many Scenarios can belong to a Master Network where a Network represents all the nodes and links that exist across its Scenarios (i.e., sub-networks). Similarly to Object Types and Attributes grouping, a Category can group a set of node or link Instances that share a common classification that is specific to some of the Object Type Instances but not all. For example, \u201cRiverine\u201d or \u201cFloodplain\u201d categories may apply to particular (not all) links of a stream Object Type as in the WASH model. Nodes, Links, and their Networks represent the second design requirement and Scenarios represent the third design requirement.", 
            "title": "Networks"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#metadata", 
            "text": "In the Metadata group (orange), metadata apply to each of the following three elements of water systems data: the Instance, Scenario, Attribute, and its Data Values. WaMDaM supports four essential key metadata to interpret data values i) the source of the element, ii) the method of creating the element and its type (e.g., measured, derived), iii) the organization and people who generate methods and serve as contact at sources. People and Organization for Sources might be different for Methods. For example, a data Source of United States Geological Survey (USGS) organization may use a Method defined by the Army Corps of Engineers organization, and iv) the unit of data values of an attribute. A unit is connected to an attribute at the Object Type level which enforces the same unit for an attribute of all instances. Thus, WaMDaM enforces unit consistency across instances of the same attribute as required by most of the reviewed models. A defined explicit structure of these metadata guides users to consistently document their metadata. A consistent metadata structure also helps users to access metadata directly and reuses it where applicable. These structured metadata satisfy the fifth design requirement.", 
            "title": "Metadata"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#data-values", 
            "text": "In the Data Values group (red), each Attribute for an Instance within a Scenario can have Data Values of any of the seven data types listed at the far right of (Figure 2). Data Values will be stored separately based on their data type to reinforce the persistency of the data model and guide users to only populate or query relevant data values. Persistency here means that data values are only stored and accessed in one place that does not change within the data model. Additional Data Types can be added (or removed) to the data model as a box, far right in (Figure 2) with no other changes", 
            "title": "Data Values"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#controlled-vocabulary", 
            "text": "In the controlled vocabularies group (purple), and sixth design requirement, optional vocabularies apply to the key concepts outlined in purple boxes in (Figure 2) to relate different terminology for similar Object Types, Attributes, and Instances across data sources and models. For example, the term \u201creservoir\u201d could be used as a term that relates the \u201cwater body\u201d and \u201cdam\u201d Object Types that originate from separate models and data sources: the \u201cWaterbodies\u201d from the USGS National Hydrography Dataset and the \u201cDams\u201d dataset from the US Army Corps of Engineers. Thus, a query to search for \u201creservoir\u201d will return the terms: reservoir, water body, and dam, as demonstrated in the first use case.", 
            "title": "Controlled Vocabulary"
        }, 
        {
            "location": "/DesignDocumentation/info_model/", 
            "text": "WaMDaM Information Model\n\n\nThe Water Management Data Model (WaMDaM) is information model to organize water management data with contextual metadata and controlled vocabulary for multiple datasets and models. WaMDaM is implemented in a relational model and works for SQLite, MySQL, PostgreSQL, and Microsoft SQL Server. \n\n\nInformation Model Concepts and their description\n\n\n\n\nFigure 1\n: Conceptual diagram of the water management information model constructs and their relationships within five groupings. Key controlled vocabulary will be introduced to the boxes outlined in purple. The \u201cCategory\u201d box applies separately to group each of Object Types, Attributes, and Instances (not connected here for simplicity).  \n\n\nDataset Structure\n\n\nA Dataset concept can associate with one or more Object Type concepts. An Object Type is a system component and can have one or more Attributes. An Attribute is quantitative or qualitative property that describes the Object Type. An Object Type can be later specified for a particular location as an Instance (e.g., Hyrum Reservoir). Users can define and customize as many combinations of Object Types and Attributes for models and datasets as they need without being limited to any predefined structure.   \n\n\nOptionally, to group many Object Types that share a common classification, users may relate one or many Object Types into a defined Category. The Category defined here, is a simplistic grouping and can be used to query and filter a group of Object Types within the same Dataset. For example, a \u201csupply\u201d or \u201cdemand\u201d Categories can group all its Objects. Similarly, for Attributes, \u201ccost\u201d and \u201cHydropower\u201d can be used to group a set of attributes of an Object Type. A more sophisticated hierarchical grouping within the category itself (also referred to as ontology) (Uschold and Gruninger, 2004) is out of the scope of this work and maybe improved in future work to meet additional specific use cases. This capability to build data structures meets the first design requirement to be modular and extensible to represent systems components.  \n\n\nNetworks\n\n\nIn the Networks group (green), an Instance is a particular implementation of an Object Type and inherits its properties. An Instance may be geo-referenced as a node in space with longitude and latitude coordinates or as a link, that has start and end nodes as a Connection. We use the general concept of Instance to refer to nodes and links because both of them have similar descriptions except that the link must reference a start and end node. Many node and link Instances belong to a Scenario to represent a particular topological relationship (e.g., existing infrastructure, proposed). Many Scenarios can belong to a Master Network where a Network represents all the nodes and links that exist across its Scenarios (i.e., sub-networks). Similarly to Object Types and Attributes grouping, a Category can group a set of node or link Instances that share a common classification that is specific to some of the Object Type Instances but not all. For example, \u201cRiverine\u201d or \u201cFloodplain\u201d categories may apply to particular (not all) links of a stream Object Type as in the WASH model. Nodes, Links, and their Networks represent the second design requirement and Scenarios represent the third design requirement.  \n\n\nMetadata\n\n\nIn the Metadata group (orange), metadata apply to each of the following three elements of water systems data: the Instance, Scenario, Attribute, and its Data Values. WaMDaM supports four essential key metadata to interpret data values i) the source of the element, ii) the method of creating the element and its type (e.g., measured, derived), iii) the organization and people who generate methods and serve as contact at sources. People and Organization for Sources might be different for Methods. For example, a data Source of United States Geological Survey (USGS) organization may use a Method defined by the Army Corps of Engineers organization, and iv) the unit of data values of an attribute. A unit is connected to an attribute at the Object Type level which enforces the same unit for an attribute of all instances. Thus, WaMDaM enforces unit consistency across instances of the same attribute as required by most of the reviewed models. A defined explicit structure of these metadata guides users to consistently document their metadata. A consistent metadata structure also helps users to access metadata directly and reuses it where applicable. These structured metadata satisfy the fifth design requirement.  \n\n\nData Values\n\n\nIn the Data Values group (red), each Attribute for an Instance within a Scenario can have Data Values of any of the seven data types listed at the far right of (Figure 2). Data Values will be stored separately based on their data type to reinforce the persistency of the data model and guide users to only populate or query relevant data values. Persistency here means that data values are only stored and accessed in one place that does not change within the data model. Additional Data Types can be added (or removed) to the data model as a box, far right in (Figure 2) with no other changes  \n\n\nControlled Vocabulary\n\n\nIn the controlled vocabularies group (purple), and sixth design requirement, optional vocabularies apply to the key concepts outlined in purple boxes in (Figure 2) to relate different terminology for similar Object Types, Attributes, and Instances across data sources and models. For example, the term \u201creservoir\u201d could be used as a term that relates the \u201cwater body\u201d and \u201cdam\u201d Object Types that originate from separate models and data sources: the \u201cWaterbodies\u201d from the USGS National Hydrography Dataset and the \u201cDams\u201d dataset from the US Army Corps of Engineers. Thus, a query to search for \u201creservoir\u201d will return the terms: reservoir, water body, and dam, as demonstrated in the first use case.", 
            "title": "Information Model"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#wamdam-information-model", 
            "text": "The Water Management Data Model (WaMDaM) is information model to organize water management data with contextual metadata and controlled vocabulary for multiple datasets and models. WaMDaM is implemented in a relational model and works for SQLite, MySQL, PostgreSQL, and Microsoft SQL Server.", 
            "title": "WaMDaM Information Model"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#information-model-concepts-and-their-description", 
            "text": "Figure 1 : Conceptual diagram of the water management information model constructs and their relationships within five groupings. Key controlled vocabulary will be introduced to the boxes outlined in purple. The \u201cCategory\u201d box applies separately to group each of Object Types, Attributes, and Instances (not connected here for simplicity).", 
            "title": "Information Model Concepts and their description"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#dataset-structure", 
            "text": "A Dataset concept can associate with one or more Object Type concepts. An Object Type is a system component and can have one or more Attributes. An Attribute is quantitative or qualitative property that describes the Object Type. An Object Type can be later specified for a particular location as an Instance (e.g., Hyrum Reservoir). Users can define and customize as many combinations of Object Types and Attributes for models and datasets as they need without being limited to any predefined structure.     Optionally, to group many Object Types that share a common classification, users may relate one or many Object Types into a defined Category. The Category defined here, is a simplistic grouping and can be used to query and filter a group of Object Types within the same Dataset. For example, a \u201csupply\u201d or \u201cdemand\u201d Categories can group all its Objects. Similarly, for Attributes, \u201ccost\u201d and \u201cHydropower\u201d can be used to group a set of attributes of an Object Type. A more sophisticated hierarchical grouping within the category itself (also referred to as ontology) (Uschold and Gruninger, 2004) is out of the scope of this work and maybe improved in future work to meet additional specific use cases. This capability to build data structures meets the first design requirement to be modular and extensible to represent systems components.", 
            "title": "Dataset Structure"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#networks", 
            "text": "In the Networks group (green), an Instance is a particular implementation of an Object Type and inherits its properties. An Instance may be geo-referenced as a node in space with longitude and latitude coordinates or as a link, that has start and end nodes as a Connection. We use the general concept of Instance to refer to nodes and links because both of them have similar descriptions except that the link must reference a start and end node. Many node and link Instances belong to a Scenario to represent a particular topological relationship (e.g., existing infrastructure, proposed). Many Scenarios can belong to a Master Network where a Network represents all the nodes and links that exist across its Scenarios (i.e., sub-networks). Similarly to Object Types and Attributes grouping, a Category can group a set of node or link Instances that share a common classification that is specific to some of the Object Type Instances but not all. For example, \u201cRiverine\u201d or \u201cFloodplain\u201d categories may apply to particular (not all) links of a stream Object Type as in the WASH model. Nodes, Links, and their Networks represent the second design requirement and Scenarios represent the third design requirement.", 
            "title": "Networks"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#metadata", 
            "text": "In the Metadata group (orange), metadata apply to each of the following three elements of water systems data: the Instance, Scenario, Attribute, and its Data Values. WaMDaM supports four essential key metadata to interpret data values i) the source of the element, ii) the method of creating the element and its type (e.g., measured, derived), iii) the organization and people who generate methods and serve as contact at sources. People and Organization for Sources might be different for Methods. For example, a data Source of United States Geological Survey (USGS) organization may use a Method defined by the Army Corps of Engineers organization, and iv) the unit of data values of an attribute. A unit is connected to an attribute at the Object Type level which enforces the same unit for an attribute of all instances. Thus, WaMDaM enforces unit consistency across instances of the same attribute as required by most of the reviewed models. A defined explicit structure of these metadata guides users to consistently document their metadata. A consistent metadata structure also helps users to access metadata directly and reuses it where applicable. These structured metadata satisfy the fifth design requirement.", 
            "title": "Metadata"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#data-values", 
            "text": "In the Data Values group (red), each Attribute for an Instance within a Scenario can have Data Values of any of the seven data types listed at the far right of (Figure 2). Data Values will be stored separately based on their data type to reinforce the persistency of the data model and guide users to only populate or query relevant data values. Persistency here means that data values are only stored and accessed in one place that does not change within the data model. Additional Data Types can be added (or removed) to the data model as a box, far right in (Figure 2) with no other changes", 
            "title": "Data Values"
        }, 
        {
            "location": "/DesignDocumentation/info_model/#controlled-vocabulary", 
            "text": "In the controlled vocabularies group (purple), and sixth design requirement, optional vocabularies apply to the key concepts outlined in purple boxes in (Figure 2) to relate different terminology for similar Object Types, Attributes, and Instances across data sources and models. For example, the term \u201creservoir\u201d could be used as a term that relates the \u201cwater body\u201d and \u201cdam\u201d Object Types that originate from separate models and data sources: the \u201cWaterbodies\u201d from the USGS National Hydrography Dataset and the \u201cDams\u201d dataset from the US Army Corps of Engineers. Thus, a query to search for \u201creservoir\u201d will return the terms: reservoir, water body, and dam, as demonstrated in the first use case.", 
            "title": "Controlled Vocabulary"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/", 
            "text": "Logical Data Model\n\n\nWhy the Relational Model?\n\n\nWe chose the Relational Model for three reasons:\n\n\ni)\n it supports conditional data queries that meet the seventh design requirement \n\n\nii)\n it is platform independent as it can be implemented on different operating systems using different relational database systems\n\n\niii)\n it supports a standardized and stable Structured Query Language (SQL) compared to recent NoSQL languages like Graph Database   \n\n\n\n\nSchema\n\n\nWaMDaM schema or entity relationship diagram is available at this interactive site. Check out the interactive schema \nSchema\n \n\n\nMapping many-to-many relationships\n\n\nFirst\n, we decided that a Dataset may have zero or many Object Types and an Object Type could have zero or many Attributes. An Object or Attribute Category may apply to zero or many Object types or Attributes, respectively. We simplified the potential many-to-many relationship between Datasets and Object Types, between Object Types and Attributes, and between Object Types and Category to each to become one-to-many. The simplification is based on the use cases above and data sources we worked with later in Section 4. Thus we do not directly support the following cases: an Attribute with its unit to belong to many Object Types, an Object Type to belong to many Datasets, an Object to belong to many Categories, or an Attribute to belong to many Categories. Using one-to-many relationship here could lead to less data storage efficiency, but it has a simpler design and more importantly an easier query syntax than earlier designs (Abdallah and Rosenberg, 2014). Future work may reevaluate this tradeoff for other data sources and use cases.  \n\n\nSecond\n, an Object Type can have zero or many Instances and each Instance inherits all the Object Attributes. An Attribute for a specific Instance then can have metadata and data values. An Attribute can only have one Data Type (e.g., time series or numeric value). We discuss metadata later in this section. A Network can have one or many Scenarios. A Scenario contains all the Instances, their Attributes, and Attributes Data Values and Metadata. A Network has a spatial reference and elevation datum. Within a Scenario, an Attribute of an Object Type can be associated with many Instances of the same Object. \n\n\nAt the same time, an Instance can have many Attributes of its parent Object Type. The \u201cMapping\u201d bridge table handle this many-to-many relationship between Object Types, Instances, and Attributes. For example, a Reservoir Object Type can have many attributes like volume and elevation. At the same time, there could be dozens of local reservoir instances where each of them has specific volume and elevation values. Instances of a parent Object Type can be accessed through a dummy Attribute for each Object Type called \u201cObjectInstances\u201d which requires a software business rule to create it. We avoided connecting the Object Types table directly to the Instances table because it creates a circular reference problem as in an earlier preliminary design (Abdallah and Rosenberg, 2014). A circular reference in the database may allow two non-unique transaction paths to insert or delete data values which is problematic to the database integrity that requires a one unique transaction path (Connolly and Begg, 2010).   \n\n\nThe \u201cScenario Mapping\u201d bridge table handles the many-to-many relationship, where an Attribute for an Instance can belong to many Scenarios, while a Scenarios can have many combinations of Attribute and Instances. For example, the same reservoir inflow time series can belong to the \u201ccurrent\u201d and \u201cfuture\u201d scenarios, while the \u201ccurrent\u201d scenario can have many other reservoir attributes. Finally, the \u201cData Values Mapper\u201d bridge table maps the relationships where an Instance and its Attribute can have many data values, while a Data Value can belong to many other Instances\n\n\nHere we generally refer to a Data Value being the whole block of time series or multi column array. The Mapping bridge table is the central table in WaMDaM where data values for different formats are connected to their Attributes, metadata, Instances, and Scenarios. When two Scenarios share the same combination of network topology (i.e., nodes and links), metadata, and data values, they are referenced (i.e., reused) from the Mapping table into the \u201cScenario Mapping\u201d bridge table with no duplication of data values storage. Later in the sixth use case in Section 4, users will use the Scenario Mapping table as a basis to compare similarities and differences of scenarios for the same network. This key design aspect is very important to allow version control and comparison between many scenarios within the same network as they often share most of the base scenario with some changes. \n\n\nNormalized Design\n\n\nWe used the database normalization technique which designs the data model in an effort to eliminate redundancy and increase design generality and parsimony in a in three main areas: metadata, node and link instances, and multi-attributes series (Connolly and Begg, 2010).\n\n\nFirst\n, in prior approaches, metadata of organizations, people, sources, and methods are sometimes represented in one table which accepts a generic definition of metadata like in HydraPlatform (Meier et al., 2014) and HarmoniRib (Refsgaard et al., 2005).  \n\n\nAlthough such generic design can accommodate uncertain data metadata structures but the tradeoff is harder capabilities to directly query and access the metadata. In WaMDaM we divided metadata into separate required tables. We intended to keep a structure of formality to allow persistent access to its data and metadata. Therefore, the querying method to manipulate and compare data will be persistent across the used data sources or study area boundary. A persistent data model provides an opportunity to build software tools and programming workflows to read data from and write to a known structure (Maidment, 2002).  \n\n\nSecond\n, the WaMDaM design presented here also normalized how prior approaches represented separate node and link tables into one shared Instances table and another Connection sub-table as introduced earlier in the conceptual design. Since the node and link instances have similar attributes, the Instances table represents both of them and the connectivity between them in another sub-table. The Connection sub-table only represent the unique start and end nodes for link Instances. Importantly, the Instances table allows users to use the same query to access data values for either nodes or links. The tradeoff of this simplicity requires a software business rule to enforce the integrity of connectivity between nodes and links. A software business rule needs to insure that a link must have a start and end nodes.   \n\n\nThird\n, we separated time series and multi-attribute series data types into two tables each. Each type has a table for additional specific metadata that apply to the second table with data values. In both types, we adapted the concept of Network Common Data Form (NetCDF) the Open Geospatial Consortium (OGC) Core Encoding Standard (OGC, 2011). NetCDF defines its dataset with global metadata (e.g., source of NetCDF file) and then defines local metadata (e.g., unit of variable) and data values (Gan et al., In Preperation). Next, we discuss how the design represents data values for the data types.\n\n\nMapping data types\n\n\nAn attribute of a node or link instance can have one or many values in each data type. A data value can be shared among many Instances. The same data value (s) for an attribute also can be shared between two scenarios without duplication. Next we elaborate on the specific aspects in each data type. \n\n\nDual Values and Numeric Values\n\n\nThe Dual values table mange the actual values either zero or one and allows users to optionally register this value with a controlled Dual Value Meaning attribute that takes values like \u201cActive\u201d or \u201cInactive\u201d with a definition for each. The numeric values table strictly manage numeric values only. \n\n\nSeasonal Numeric Values:\n\n\nThis table manages numeric values that change with categorical time defined here as a season name. Users may optionally register the season name with a controlled term. Then they can provide a numeric value for each season name as much as needed. For each record of season name and value, there is a season order field to preserve the seasons and data values order as they are entered which can also be used to sort the season values.  \n\n\nDescriptor Values:\n\n\nThe design allows users to store values like \u201chydropower\u201d and optionally register them with controlled vocabulary. The same field also allows users to store any descriptive text. Earlier design had two separate \u201ccontrolled\u201d and \u201cfree\u201d descriptor tables which could be confusing to users to choose from (Abdallah and Rosenberg, 2014). The same attribute can have multiple descriptor values. For example, \u201cpurpose\u201d of Hyrum Reservoir takes the values of \u201cHydropower\u201d, \u201cRecreation\u201d, and \u201cIrrigation\u201d. While the same \u201cpurpose\u201d value can be shared across other reservoirs leading to one unique value stored for the entire reservoirs dataset.  \n\n\nTime Series:\n\n\nThe first table in time series data captures additional key global metadata for the entire block of time series: i) Begin and End Date/Time fields which represent the extent of a time series, ii) Year Type to specific whether it is a \u201cwater year\u201d or \u201ccalendar year\u201d as both of them are used in water management datasets, iii) Aggregation Statistic which is a vocabulary for describing the calculated statistic over an Interval associated with recorded observations (e.g., average, cumulative)., and vi) an Aggregation Interval which indicates the time period of the aggregation statistic (e.g., 1) within an Aggregation Interval Unit (e.g., day, month). The second table records data values and their time stamp. The reviewed water management models and used datasets are often derived and curated time series data which does not report metadata to each individual time series value, therefore WaMDaM does not support such micro metadata. WaMDaM is not intended to replace the specialized time series database systems like CUAHSI but rather to consume data from them. Separating time series metadata from the individual values is also more practical to water management use cases in the in attempt to balance between the principles and practicality of metadata usage as recommended by Duval et al. (2002) as mentioned earlier.  \n\n\nMulti Attribute Series\n\n\nThe first table MultiAttributeSeries stores the attributes that constitute the array along with their metadata of source, method, and unit. The second table MultiAttributeSeriesValues stores data values and their sequential order for each attribute. The sequential order field preserves the order and pairing of data values across many attributes within the same array. Data values of the multi attribute series are flexible to have numeric or text values which allows storing a wide range of related descriptive and numeric values for many cases. Future work based on use cases may identify the tradeoff of this flexibility on maintaining the integrity of stored values. Each attribute or column has its metadata and data values and can be accessed by itself or with the other columns. As part of the normalized design of these two tables, a MultiAttributeSeries can take as many attributes (i.e., columns) and data values. Both the MultiAttributeSeries attribute and each sub-attribute may optionally be registered with controlled vocabulary terms.\n\n\nElectronic Files\n\n\nUsers could attach copies like images, maps, csv, and text files to an attribute with this defined data type. They are stored as Binary Large OBject (BLOB) in the database. We added a controlled vocabulary called Electronic File Format that has the list of supported and defined physical formats to help users understand the type of file and how to open it.", 
            "title": "Logical Model Schema"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#logical-data-model", 
            "text": "", 
            "title": "Logical Data Model"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#why-the-relational-model", 
            "text": "We chose the Relational Model for three reasons:  i)  it supports conditional data queries that meet the seventh design requirement   ii)  it is platform independent as it can be implemented on different operating systems using different relational database systems  iii)  it supports a standardized and stable Structured Query Language (SQL) compared to recent NoSQL languages like Graph Database", 
            "title": "Why the Relational Model?"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#schema", 
            "text": "WaMDaM schema or entity relationship diagram is available at this interactive site. Check out the interactive schema  Schema", 
            "title": "Schema"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#mapping-many-to-many-relationships", 
            "text": "First , we decided that a Dataset may have zero or many Object Types and an Object Type could have zero or many Attributes. An Object or Attribute Category may apply to zero or many Object types or Attributes, respectively. We simplified the potential many-to-many relationship between Datasets and Object Types, between Object Types and Attributes, and between Object Types and Category to each to become one-to-many. The simplification is based on the use cases above and data sources we worked with later in Section 4. Thus we do not directly support the following cases: an Attribute with its unit to belong to many Object Types, an Object Type to belong to many Datasets, an Object to belong to many Categories, or an Attribute to belong to many Categories. Using one-to-many relationship here could lead to less data storage efficiency, but it has a simpler design and more importantly an easier query syntax than earlier designs (Abdallah and Rosenberg, 2014). Future work may reevaluate this tradeoff for other data sources and use cases.    Second , an Object Type can have zero or many Instances and each Instance inherits all the Object Attributes. An Attribute for a specific Instance then can have metadata and data values. An Attribute can only have one Data Type (e.g., time series or numeric value). We discuss metadata later in this section. A Network can have one or many Scenarios. A Scenario contains all the Instances, their Attributes, and Attributes Data Values and Metadata. A Network has a spatial reference and elevation datum. Within a Scenario, an Attribute of an Object Type can be associated with many Instances of the same Object.   At the same time, an Instance can have many Attributes of its parent Object Type. The \u201cMapping\u201d bridge table handle this many-to-many relationship between Object Types, Instances, and Attributes. For example, a Reservoir Object Type can have many attributes like volume and elevation. At the same time, there could be dozens of local reservoir instances where each of them has specific volume and elevation values. Instances of a parent Object Type can be accessed through a dummy Attribute for each Object Type called \u201cObjectInstances\u201d which requires a software business rule to create it. We avoided connecting the Object Types table directly to the Instances table because it creates a circular reference problem as in an earlier preliminary design (Abdallah and Rosenberg, 2014). A circular reference in the database may allow two non-unique transaction paths to insert or delete data values which is problematic to the database integrity that requires a one unique transaction path (Connolly and Begg, 2010).     The \u201cScenario Mapping\u201d bridge table handles the many-to-many relationship, where an Attribute for an Instance can belong to many Scenarios, while a Scenarios can have many combinations of Attribute and Instances. For example, the same reservoir inflow time series can belong to the \u201ccurrent\u201d and \u201cfuture\u201d scenarios, while the \u201ccurrent\u201d scenario can have many other reservoir attributes. Finally, the \u201cData Values Mapper\u201d bridge table maps the relationships where an Instance and its Attribute can have many data values, while a Data Value can belong to many other Instances  Here we generally refer to a Data Value being the whole block of time series or multi column array. The Mapping bridge table is the central table in WaMDaM where data values for different formats are connected to their Attributes, metadata, Instances, and Scenarios. When two Scenarios share the same combination of network topology (i.e., nodes and links), metadata, and data values, they are referenced (i.e., reused) from the Mapping table into the \u201cScenario Mapping\u201d bridge table with no duplication of data values storage. Later in the sixth use case in Section 4, users will use the Scenario Mapping table as a basis to compare similarities and differences of scenarios for the same network. This key design aspect is very important to allow version control and comparison between many scenarios within the same network as they often share most of the base scenario with some changes.", 
            "title": "Mapping many-to-many relationships"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#normalized-design", 
            "text": "We used the database normalization technique which designs the data model in an effort to eliminate redundancy and increase design generality and parsimony in a in three main areas: metadata, node and link instances, and multi-attributes series (Connolly and Begg, 2010).  First , in prior approaches, metadata of organizations, people, sources, and methods are sometimes represented in one table which accepts a generic definition of metadata like in HydraPlatform (Meier et al., 2014) and HarmoniRib (Refsgaard et al., 2005).    Although such generic design can accommodate uncertain data metadata structures but the tradeoff is harder capabilities to directly query and access the metadata. In WaMDaM we divided metadata into separate required tables. We intended to keep a structure of formality to allow persistent access to its data and metadata. Therefore, the querying method to manipulate and compare data will be persistent across the used data sources or study area boundary. A persistent data model provides an opportunity to build software tools and programming workflows to read data from and write to a known structure (Maidment, 2002).    Second , the WaMDaM design presented here also normalized how prior approaches represented separate node and link tables into one shared Instances table and another Connection sub-table as introduced earlier in the conceptual design. Since the node and link instances have similar attributes, the Instances table represents both of them and the connectivity between them in another sub-table. The Connection sub-table only represent the unique start and end nodes for link Instances. Importantly, the Instances table allows users to use the same query to access data values for either nodes or links. The tradeoff of this simplicity requires a software business rule to enforce the integrity of connectivity between nodes and links. A software business rule needs to insure that a link must have a start and end nodes.     Third , we separated time series and multi-attribute series data types into two tables each. Each type has a table for additional specific metadata that apply to the second table with data values. In both types, we adapted the concept of Network Common Data Form (NetCDF) the Open Geospatial Consortium (OGC) Core Encoding Standard (OGC, 2011). NetCDF defines its dataset with global metadata (e.g., source of NetCDF file) and then defines local metadata (e.g., unit of variable) and data values (Gan et al., In Preperation). Next, we discuss how the design represents data values for the data types.", 
            "title": "Normalized Design"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#mapping-data-types", 
            "text": "An attribute of a node or link instance can have one or many values in each data type. A data value can be shared among many Instances. The same data value (s) for an attribute also can be shared between two scenarios without duplication. Next we elaborate on the specific aspects in each data type.", 
            "title": "Mapping data types"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#dual-values-and-numeric-values", 
            "text": "The Dual values table mange the actual values either zero or one and allows users to optionally register this value with a controlled Dual Value Meaning attribute that takes values like \u201cActive\u201d or \u201cInactive\u201d with a definition for each. The numeric values table strictly manage numeric values only.", 
            "title": "Dual Values and Numeric Values"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#seasonal-numeric-values", 
            "text": "This table manages numeric values that change with categorical time defined here as a season name. Users may optionally register the season name with a controlled term. Then they can provide a numeric value for each season name as much as needed. For each record of season name and value, there is a season order field to preserve the seasons and data values order as they are entered which can also be used to sort the season values.", 
            "title": "Seasonal Numeric Values:"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#descriptor-values", 
            "text": "The design allows users to store values like \u201chydropower\u201d and optionally register them with controlled vocabulary. The same field also allows users to store any descriptive text. Earlier design had two separate \u201ccontrolled\u201d and \u201cfree\u201d descriptor tables which could be confusing to users to choose from (Abdallah and Rosenberg, 2014). The same attribute can have multiple descriptor values. For example, \u201cpurpose\u201d of Hyrum Reservoir takes the values of \u201cHydropower\u201d, \u201cRecreation\u201d, and \u201cIrrigation\u201d. While the same \u201cpurpose\u201d value can be shared across other reservoirs leading to one unique value stored for the entire reservoirs dataset.", 
            "title": "Descriptor Values:"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#time-series", 
            "text": "The first table in time series data captures additional key global metadata for the entire block of time series: i) Begin and End Date/Time fields which represent the extent of a time series, ii) Year Type to specific whether it is a \u201cwater year\u201d or \u201ccalendar year\u201d as both of them are used in water management datasets, iii) Aggregation Statistic which is a vocabulary for describing the calculated statistic over an Interval associated with recorded observations (e.g., average, cumulative)., and vi) an Aggregation Interval which indicates the time period of the aggregation statistic (e.g., 1) within an Aggregation Interval Unit (e.g., day, month). The second table records data values and their time stamp. The reviewed water management models and used datasets are often derived and curated time series data which does not report metadata to each individual time series value, therefore WaMDaM does not support such micro metadata. WaMDaM is not intended to replace the specialized time series database systems like CUAHSI but rather to consume data from them. Separating time series metadata from the individual values is also more practical to water management use cases in the in attempt to balance between the principles and practicality of metadata usage as recommended by Duval et al. (2002) as mentioned earlier.", 
            "title": "Time Series:"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#multi-attribute-series", 
            "text": "The first table MultiAttributeSeries stores the attributes that constitute the array along with their metadata of source, method, and unit. The second table MultiAttributeSeriesValues stores data values and their sequential order for each attribute. The sequential order field preserves the order and pairing of data values across many attributes within the same array. Data values of the multi attribute series are flexible to have numeric or text values which allows storing a wide range of related descriptive and numeric values for many cases. Future work based on use cases may identify the tradeoff of this flexibility on maintaining the integrity of stored values. Each attribute or column has its metadata and data values and can be accessed by itself or with the other columns. As part of the normalized design of these two tables, a MultiAttributeSeries can take as many attributes (i.e., columns) and data values. Both the MultiAttributeSeries attribute and each sub-attribute may optionally be registered with controlled vocabulary terms.", 
            "title": "Multi Attribute Series"
        }, 
        {
            "location": "/DesignDocumentation/logical_Model/#electronic-files", 
            "text": "Users could attach copies like images, maps, csv, and text files to an attribute with this defined data type. They are stored as Binary Large OBject (BLOB) in the database. We added a controlled vocabulary called Electronic File Format that has the list of supported and defined physical formats to help users understand the type of file and how to open it.", 
            "title": "Electronic Files"
        }, 
        {
            "location": "/DesignDocumentation/Physical_Model/", 
            "text": "Physical Model Implementation\n\n\nImplementation\n\n\nWe selected the physical data types (e.g., integer, character, binary) for the fields of tables and we imposed physical constraints on each field (e.g., value cannot be null) by following the physical data types convention in ODM2 (Horsburgh et al., 2016).    \n\n\nWe saved the ER diagram of the logical model of WaMDaM in DbWrench in an Extensible Markup Language (XML) format file. Then we adapted an existing script in Python 2.7 used in (Horsburgh et al., 2016; Tony Castronova, 2015) to forward engineer the XML ER diagram into the Data Definition Language (DDL) which is a set of create statements for tables for four RDBMS implementations: PostgreSQL, MySQL, Microsoft SQL Server, and SQLite.   \n\n\nThe DDL scripts, physical data model implementations for the four RDBMS, and details about the used physical data types and constraints are described in the GitHub repository. The differences between these databases are marginal and mostly related to physical data types that are native to each database and minor syntax differences.  \n\n\nCopies of WaMDaM Dbs\n\n\nScript to create blank WaMDaM databases OR copies of each database to restore \n\n1. \nMicrosoft SQL Server\n  \n\n2. \nMySQL\n\n3. \nPostgreSQL\n\n4. \nSQLite\n  \n\n\nWorking with SQLite\n\n\nUsers can choose to work with any of these WaMDaM databases. We elected to use \nSQLite\n and populate it with data to demonstrate the use cases and benefits of WaMDaM to the water resources community as discussed in the next section. SQLite is free, open-source, and server-less. We also used the \nSQLite Manager Add-ons\n to Mozilla Firefox as an open-source user interface to visualize and interact with WaMDaM tables.", 
            "title": "Physical Model Implementations"
        }, 
        {
            "location": "/DesignDocumentation/Physical_Model/#physical-model-implementation", 
            "text": "", 
            "title": "Physical Model Implementation"
        }, 
        {
            "location": "/DesignDocumentation/Physical_Model/#implementation", 
            "text": "We selected the physical data types (e.g., integer, character, binary) for the fields of tables and we imposed physical constraints on each field (e.g., value cannot be null) by following the physical data types convention in ODM2 (Horsburgh et al., 2016).      We saved the ER diagram of the logical model of WaMDaM in DbWrench in an Extensible Markup Language (XML) format file. Then we adapted an existing script in Python 2.7 used in (Horsburgh et al., 2016; Tony Castronova, 2015) to forward engineer the XML ER diagram into the Data Definition Language (DDL) which is a set of create statements for tables for four RDBMS implementations: PostgreSQL, MySQL, Microsoft SQL Server, and SQLite.     The DDL scripts, physical data model implementations for the four RDBMS, and details about the used physical data types and constraints are described in the GitHub repository. The differences between these databases are marginal and mostly related to physical data types that are native to each database and minor syntax differences.", 
            "title": "Implementation"
        }, 
        {
            "location": "/DesignDocumentation/Physical_Model/#copies-of-wamdam-dbs", 
            "text": "Script to create blank WaMDaM databases OR copies of each database to restore  \n1.  Microsoft SQL Server    \n2.  MySQL \n3.  PostgreSQL \n4.  SQLite", 
            "title": "Copies of WaMDaM Dbs"
        }, 
        {
            "location": "/DesignDocumentation/Physical_Model/#working-with-sqlite", 
            "text": "Users can choose to work with any of these WaMDaM databases. We elected to use  SQLite  and populate it with data to demonstrate the use cases and benefits of WaMDaM to the water resources community as discussed in the next section. SQLite is free, open-source, and server-less. We also used the  SQLite Manager Add-ons  to Mozilla Firefox as an open-source user interface to visualize and interact with WaMDaM tables.", 
            "title": "Working with SQLite"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/", 
            "text": "Controlled Vocabulary tables\n\n\nThe three key controlled vocabulary that are needed to basic data quries are:\n\nCV_AttributeName, CV_InstanceName, and CV_ObjectType\n\n\nCV_AggregationStatistic\n\n\nA term for describing the statistical action used to calculate over recorded time series values within a time interval. For example, 100 cfs of delivery target to a demand site is a \"cumulative\" aggregation statistic calculated over a time interval like a month.\n\n\nCV_AttributeDataType\n\n\nA term for describing the supported types of data that an attribute in WaMDaM can take based on logical and physical groupings like numeric, text, time stamped values, and parried categorical values. For example, numeric values, descriptor value, electronic files, time series, and multi attribute series.\n\n\nCV_AttributeName\n\n\nA Term describing the name of quantitate or qualitative property of a water system component (e.g., reservoir).\n\n\nCV_DescriptorValues\n\n\nA term for describing descriptive values (characters as numeric or strings) for an attribute. The descriptor values can be shared across attributes of systems components like land use \"Grass_Pasture\" or irrigation type \"Flood\", or site code as \"10000010\"\n\n\nCV_DualValueMeaning\n\n\nA Term describing the specific meaning of Boolean data values (True, False)for an attribute.\n\n\nCV_ElectronicFileFormat\n\n\nA term for describing the supported physical format of files loaded into WaMDaM as values to attributes(e.g., csv, jpg, NETCDF).\n\n\nCV_ElevationDatum\n\n\nA term for describing vertical datums. Vertical datums are used in WaMDaM to specify the origin for elevations associated with node instance in networks.\n\n\nCV_InstanceName\n\n\nA term for describing the name of a specific node or link system component in a specific location which can related synonymous native instance terms (e.g., Hyrum = Hrm \n Hyrum Reservoir).\n\n\nCV_MethodType\n\n\nA term for describing types of Methods associated with recording or generating data values to attributes. Example method types are like \"expert opinion\", \"field procedure\", \"model simulation\".\n\n\nCV_ObjectType\n\n\nA term for describing a built or natural water system component .\n\n\nCV_ObjectTypology\n\n\nA term for describing the category of an Object Type as either: Node, link, network.\n\n\nCV_SeasonName\n\n\nA term for describing a categorical value that may correspond to numeric values of an attribute. The CategoricalValue represents steps in time (e.g., Winter, Summer, March, April) or space (e.g., categorical levels of reservoir levels (e.g., inactive, conservation, flood)\n\n\nCV_SpatialReference\n\n\nA term for describing a geographic reference to all the node instances that belong to the same Master Network.\n\n\nCV_Units\n\n\nA term for describing the name of the Unit of data value of an attribute.\n\n\nApplication\n\n\nA Python/Django web application and REST API for managing the WaMDaM Controlled Vocabularies. This repository contains the source code for the master controlled vocabulary registry for the Water Management Data Model (WaMDaM).\n\nThe configuration and deployment of the original repository have been significantly changed to be much simplified and automated using Ansible and Docker. A developer now can configure and deploy the app many times if they wish much easier than before.     \n\n\nThe production Controlled Vocabulary website for WaMDaM (which uses this code) can be accessed at: \nhttp://vocabulary.wamdam.org/\n\nThis online moderated registry aims to promote consistent terminology (i.e., Controlled Vocabularies-(CVs)) to describe water system components and their attributes across datasets, models, and users, while still retaining the native terms. Registering your model's native terms against these CVs will allow you to relate, query, and compare all of your water management data within a single database.", 
            "title": "Controlled Vocabulary"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#controlled-vocabulary-tables", 
            "text": "The three key controlled vocabulary that are needed to basic data quries are: \nCV_AttributeName, CV_InstanceName, and CV_ObjectType", 
            "title": "Controlled Vocabulary tables"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_aggregationstatistic", 
            "text": "A term for describing the statistical action used to calculate over recorded time series values within a time interval. For example, 100 cfs of delivery target to a demand site is a \"cumulative\" aggregation statistic calculated over a time interval like a month.", 
            "title": "CV_AggregationStatistic"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_attributedatatype", 
            "text": "A term for describing the supported types of data that an attribute in WaMDaM can take based on logical and physical groupings like numeric, text, time stamped values, and parried categorical values. For example, numeric values, descriptor value, electronic files, time series, and multi attribute series.", 
            "title": "CV_AttributeDataType"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_attributename", 
            "text": "A Term describing the name of quantitate or qualitative property of a water system component (e.g., reservoir).", 
            "title": "CV_AttributeName"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_descriptorvalues", 
            "text": "A term for describing descriptive values (characters as numeric or strings) for an attribute. The descriptor values can be shared across attributes of systems components like land use \"Grass_Pasture\" or irrigation type \"Flood\", or site code as \"10000010\"", 
            "title": "CV_DescriptorValues"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_dualvaluemeaning", 
            "text": "A Term describing the specific meaning of Boolean data values (True, False)for an attribute.", 
            "title": "CV_DualValueMeaning"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_electronicfileformat", 
            "text": "A term for describing the supported physical format of files loaded into WaMDaM as values to attributes(e.g., csv, jpg, NETCDF).", 
            "title": "CV_ElectronicFileFormat"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_elevationdatum", 
            "text": "A term for describing vertical datums. Vertical datums are used in WaMDaM to specify the origin for elevations associated with node instance in networks.", 
            "title": "CV_ElevationDatum"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_instancename", 
            "text": "A term for describing the name of a specific node or link system component in a specific location which can related synonymous native instance terms (e.g., Hyrum = Hrm   Hyrum Reservoir).", 
            "title": "CV_InstanceName"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_methodtype", 
            "text": "A term for describing types of Methods associated with recording or generating data values to attributes. Example method types are like \"expert opinion\", \"field procedure\", \"model simulation\".", 
            "title": "CV_MethodType"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_objecttype", 
            "text": "A term for describing a built or natural water system component .", 
            "title": "CV_ObjectType"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_objecttypology", 
            "text": "A term for describing the category of an Object Type as either: Node, link, network.", 
            "title": "CV_ObjectTypology"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_seasonname", 
            "text": "A term for describing a categorical value that may correspond to numeric values of an attribute. The CategoricalValue represents steps in time (e.g., Winter, Summer, March, April) or space (e.g., categorical levels of reservoir levels (e.g., inactive, conservation, flood)", 
            "title": "CV_SeasonName"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_spatialreference", 
            "text": "A term for describing a geographic reference to all the node instances that belong to the same Master Network.", 
            "title": "CV_SpatialReference"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#cv_units", 
            "text": "A term for describing the name of the Unit of data value of an attribute.", 
            "title": "CV_Units"
        }, 
        {
            "location": "/DesignDocumentation/ControlledVocabulary/#application", 
            "text": "A Python/Django web application and REST API for managing the WaMDaM Controlled Vocabularies. This repository contains the source code for the master controlled vocabulary registry for the Water Management Data Model (WaMDaM). \nThe configuration and deployment of the original repository have been significantly changed to be much simplified and automated using Ansible and Docker. A developer now can configure and deploy the app many times if they wish much easier than before.       The production Controlled Vocabulary website for WaMDaM (which uses this code) can be accessed at:  http://vocabulary.wamdam.org/ \nThis online moderated registry aims to promote consistent terminology (i.e., Controlled Vocabularies-(CVs)) to describe water system components and their attributes across datasets, models, and users, while still retaining the native terms. Registering your model's native terms against these CVs will allow you to relate, query, and compare all of your water management data within a single database.", 
            "title": "Application"
        }, 
        {
            "location": "/About/", 
            "text": "About\n\n\nThe Water Management Data Model (WaMDaM) is a novel method that describes and implements database design and its software to organize and compare systems water resources management data. \n\n\nHow to use it?\n\n\nThe WaMDaM Wizard is a desktop data loader from a spreadsheet template to SQLite or MySQL databases\n\n\nWhat does it do?\n\n\nIt enables users to manage and integrate data: CUAHSI time series data, network connectivity, water rights, hydropower, cost, seasonal data, multi-dimension arrays. WaMDaM does not replace existing specialized data systems but rather it brings their data together for the use in water management models   \n\n\nTeam\n\n\nWaMDaM is developed and maintained primarily by Adel Abdallah for his PhD dissertation with the help of a team of professors and developers at Utah State University, Logan, Utah and other institutions nationally and internationally. \n\n\nFunding\n \n\n\nWaMDaM has been primarily funded by the National Science Foundation.    \n\n\nLicense\n\n\nWaMDaM is Free! Software and source-code are released under the New Berkeley Software Distribution (BSD) 3-Clause License, which allows for liberal reuse. All source code, use cases, and documentation can be accessed at \nWaMDaM.org", 
            "title": "About"
        }, 
        {
            "location": "/About/#about", 
            "text": "The Water Management Data Model (WaMDaM) is a novel method that describes and implements database design and its software to organize and compare systems water resources management data.", 
            "title": "About"
        }, 
        {
            "location": "/About/#how-to-use-it", 
            "text": "The WaMDaM Wizard is a desktop data loader from a spreadsheet template to SQLite or MySQL databases", 
            "title": "How to use it?"
        }, 
        {
            "location": "/About/#what-does-it-do", 
            "text": "It enables users to manage and integrate data: CUAHSI time series data, network connectivity, water rights, hydropower, cost, seasonal data, multi-dimension arrays. WaMDaM does not replace existing specialized data systems but rather it brings their data together for the use in water management models", 
            "title": "What does it do?"
        }, 
        {
            "location": "/About/#team", 
            "text": "WaMDaM is developed and maintained primarily by Adel Abdallah for his PhD dissertation with the help of a team of professors and developers at Utah State University, Logan, Utah and other institutions nationally and internationally.", 
            "title": "Team"
        }, 
        {
            "location": "/About/#funding", 
            "text": "WaMDaM has been primarily funded by the National Science Foundation.", 
            "title": "Funding"
        }, 
        {
            "location": "/About/#license", 
            "text": "WaMDaM is Free! Software and source-code are released under the New Berkeley Software Distribution (BSD) 3-Clause License, which allows for liberal reuse. All source code, use cases, and documentation can be accessed at  WaMDaM.org", 
            "title": "License"
        }
    ]
}